import{L as o}from"./TilesRenderer-Dt06WWnf.js";class b{set delay(e){this.deferCallbacks.delay=e}get delay(){return this.deferCallbacks.delay}set bytesTarget(e){this.lruCache.minBytesSize=e}get bytesTarget(){return this.lruCache.minBytesSize}get estimatedGpuBytes(){return this.lruCache.cachedBytes}constructor(e={}){const{delay:a=0,bytesTarget:s=0}=e;this.name="UNLOAD_TILES_PLUGIN",this.tiles=null,this.lruCache=new o,this.deferCallbacks=new h,this.delay=a,this.bytesTarget=s}init(e){this.tiles=e;const{lruCache:a,deferCallbacks:s}=this;s.callback=i=>{a.markUnused(i),a.scheduleUnload(!1)};const l=i=>{const t=i.cached.scene;e.visibleTiles.has(i)||e.invokeOnePlugin(r=>r.unloadTileFromGPU&&r.unloadTileFromGPU(t,i))};this._onUpdateBefore=()=>{a.unloadPriorityCallback=e.lruCache.unloadPriorityCallback,a.computeMemoryUsageCallback=e.lruCache.computeMemoryUsageCallback,a.minSize=1/0,a.maxSize=1/0,a.maxBytesSize=1/0,a.unloadPercent=1,a.autoMarkUnused=!1},this._onVisibilityChangeCallback=({tile:i,visible:t})=>{t?(a.add(i,l),e.markTileUsed(i),s.cancel(i)):s.run(i)},e.forEachLoadedModel((i,t)=>{const n=e.visibleTiles.has(t);this._onVisibilityChangeCallback({scene:i,visible:n})}),e.addEventListener("tile-visibility-change",this._onVisibilityChangeCallback),e.addEventListener("update-before",this._onUpdateBefore)}unloadTileFromGPU(e,a){e&&e.traverse(s=>{if(s.material){const l=s.material;l.dispose();for(const i in l){const t=l[i];t&&t.isTexture&&t.dispose()}}s.geometry&&s.geometry.dispose()})}dispose(){this.tiles.removeEventListener("tile-visibility-change",this._onVisibilityChangeCallback),this.tiles.removeEventListener("update-before",this._onUpdateBefore),this.deferCallbacks.cancelAll()}}class h{constructor(e=()=>{}){this.map=new Map,this.callback=e,this.delay=0}run(e){const{map:a,delay:s}=this;if(a.has(e))throw new Error("DeferCallbackManager: Callback already initialized.");s===0?this.callback(e):a.set(e,setTimeout(()=>this.callback(e),s))}cancel(e){const{map:a}=this;a.has(e)&&(clearTimeout(a.get(e)),a.delete(e))}cancelAll(){this.map.forEach((e,a)=>{this.cancel(a)})}}export{b as U};
//# sourceMappingURL=UnloadTilesPlugin-C6lJ6nje.js.map
