{"version":3,"file":"projection-Bwbjue6j.js","sources":["../../../src/core/plugins/EnforceNonZeroErrorPlugin.js","../../../node_modules/three-stdlib/_polyfill/uv1.js","../../../node_modules/three-stdlib/lines/LineSegmentsGeometry.js","../../../node_modules/three-stdlib/lines/LineGeometry.js","../../../node_modules/three-stdlib/lines/LineMaterial.js","../../../node_modules/three-stdlib/lines/LineSegments2.js","../../../node_modules/three-stdlib/lines/Line2.js","../../../node_modules/@react-three/drei/web/Html.js","../../../node_modules/@react-three/drei/core/calculateScaleFactor.js","../../../node_modules/@react-three/drei/core/Line.js","../../../node_modules/@react-three/drei/web/pivotControls/context.js","../../../node_modules/@react-three/drei/web/pivotControls/AxisArrow.js","../../../node_modules/@react-three/drei/web/pivotControls/AxisRotator.js","../../../node_modules/@react-three/drei/web/pivotControls/PlaneSlider.js","../../../node_modules/@react-three/drei/web/pivotControls/ScalingSphere.js","../../../node_modules/@react-three/drei/web/pivotControls/index.js","../../r3f/plugins/ImageOverlayPlugin.jsx","../../../node_modules/three/examples/jsm/lines/LineSegmentsGeometry.js","../../../node_modules/three/examples/jsm/lines/LineMaterial.js","../../../node_modules/three/examples/jsm/lines/LineSegments2.js","../../r3f/projection.jsx"],"sourcesContent":["export class EnforceNonZeroErrorPlugin {\n\n\tconstructor() {\n\n\t\tthis.name = 'ENFORCE_NONZERO_ERROR';\n\t\tthis.priority = - Infinity;\n\t\tthis.originalError = new Map();\n\n\t}\n\n\tpreprocessNode( tile ) {\n\n\t\t// if a tile has zero error then traverse the parents and find some geometric error value in\n\t\t// the parent hierarchy to use for calculating a pseudo geometric error for this tile.\n\t\tif ( tile.geometricError === 0 ) {\n\n\t\t\tlet parent = tile.parent;\n\t\t\tlet depth = 1;\n\n\t\t\tlet targetDepth = - 1;\n\t\t\tlet targetError = Infinity;\n\t\t\twhile ( parent !== null ) {\n\n\t\t\t\tif ( parent.geometricError !== 0 && parent.geometricError < targetError ) {\n\n\t\t\t\t\ttargetError = parent.geometricError;\n\t\t\t\t\ttargetDepth = depth;\n\n\t\t\t\t}\n\n\t\t\t\tparent = parent.parent;\n\t\t\t\tdepth ++;\n\n\t\t\t}\n\n\t\t\t// find the smallest error in the parent list to avoid grabbing artificially inflated error values\n\t\t\t// for the sake of forced refinement. Then scale the error by the depth.\n\t\t\tif ( targetDepth !== - 1 ) {\n\n\t\t\t\ttile.geometricError = targetError * ( 2 ** - depth );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","import { version } from \"./constants.js\";\nconst UV1 = version >= 125 ? \"uv1\" : \"uv2\";\nexport {\n  UV1\n};\n//# sourceMappingURL=uv1.js.map\n","import { InstancedBufferGeometry, Float32BufferAttribute, InstancedInterleavedBuffer, InterleavedBufferAttribute, WireframeGeometry, Box3, Sphere, Vector3 } from \"three\";\nconst _box = /* @__PURE__ */ new Box3();\nconst _vector = /* @__PURE__ */ new Vector3();\nclass LineSegmentsGeometry extends InstancedBufferGeometry {\n  constructor() {\n    super();\n    this.isLineSegmentsGeometry = true;\n    this.type = \"LineSegmentsGeometry\";\n    const positions = [-1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1, -1, 0];\n    const uvs = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2];\n    const index = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];\n    this.setIndex(index);\n    this.setAttribute(\"position\", new Float32BufferAttribute(positions, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n  }\n  applyMatrix4(matrix) {\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n    if (start !== void 0) {\n      start.applyMatrix4(matrix);\n      end.applyMatrix4(matrix);\n      start.needsUpdate = true;\n    }\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n    return this;\n  }\n  setPositions(array) {\n    let lineSegments;\n    if (array instanceof Float32Array) {\n      lineSegments = array;\n    } else if (Array.isArray(array)) {\n      lineSegments = new Float32Array(array);\n    }\n    const instanceBuffer = new InstancedInterleavedBuffer(lineSegments, 6, 1);\n    this.setAttribute(\"instanceStart\", new InterleavedBufferAttribute(instanceBuffer, 3, 0));\n    this.setAttribute(\"instanceEnd\", new InterleavedBufferAttribute(instanceBuffer, 3, 3));\n    this.computeBoundingBox();\n    this.computeBoundingSphere();\n    return this;\n  }\n  setColors(array, itemSize = 3) {\n    let colors;\n    if (array instanceof Float32Array) {\n      colors = array;\n    } else if (Array.isArray(array)) {\n      colors = new Float32Array(array);\n    }\n    const instanceColorBuffer = new InstancedInterleavedBuffer(colors, itemSize * 2, 1);\n    this.setAttribute(\"instanceColorStart\", new InterleavedBufferAttribute(instanceColorBuffer, itemSize, 0));\n    this.setAttribute(\"instanceColorEnd\", new InterleavedBufferAttribute(instanceColorBuffer, itemSize, itemSize));\n    return this;\n  }\n  fromWireframeGeometry(geometry) {\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n  fromEdgesGeometry(geometry) {\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n  fromMesh(mesh) {\n    this.fromWireframeGeometry(new WireframeGeometry(mesh.geometry));\n    return this;\n  }\n  fromLineSegments(lineSegments) {\n    const geometry = lineSegments.geometry;\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n    if (start !== void 0 && end !== void 0) {\n      this.boundingBox.setFromBufferAttribute(start);\n      _box.setFromBufferAttribute(end);\n      this.boundingBox.union(_box);\n    }\n  }\n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n    if (this.boundingBox === null) {\n      this.computeBoundingBox();\n    }\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n    if (start !== void 0 && end !== void 0) {\n      const center = this.boundingSphere.center;\n      this.boundingBox.getCenter(center);\n      let maxRadiusSq = 0;\n      for (let i = 0, il = start.count; i < il; i++) {\n        _vector.fromBufferAttribute(start, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector));\n        _vector.fromBufferAttribute(end, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector));\n      }\n      this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n      if (isNaN(this.boundingSphere.radius)) {\n        console.error(\n          \"THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.\",\n          this\n        );\n      }\n    }\n  }\n  toJSON() {\n  }\n  applyMatrix(matrix) {\n    console.warn(\"THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().\");\n    return this.applyMatrix4(matrix);\n  }\n}\nexport {\n  LineSegmentsGeometry\n};\n//# sourceMappingURL=LineSegmentsGeometry.js.map\n","import { LineSegmentsGeometry } from \"./LineSegmentsGeometry.js\";\nclass LineGeometry extends LineSegmentsGeometry {\n  constructor() {\n    super();\n    this.isLineGeometry = true;\n    this.type = \"LineGeometry\";\n  }\n  setPositions(array) {\n    const length = array.length - 3;\n    const points = new Float32Array(2 * length);\n    for (let i = 0; i < length; i += 3) {\n      points[2 * i] = array[i];\n      points[2 * i + 1] = array[i + 1];\n      points[2 * i + 2] = array[i + 2];\n      points[2 * i + 3] = array[i + 3];\n      points[2 * i + 4] = array[i + 4];\n      points[2 * i + 5] = array[i + 5];\n    }\n    super.setPositions(points);\n    return this;\n  }\n  setColors(array, itemSize = 3) {\n    const length = array.length - itemSize;\n    const colors = new Float32Array(2 * length);\n    if (itemSize === 3) {\n      for (let i = 0; i < length; i += itemSize) {\n        colors[2 * i] = array[i];\n        colors[2 * i + 1] = array[i + 1];\n        colors[2 * i + 2] = array[i + 2];\n        colors[2 * i + 3] = array[i + 3];\n        colors[2 * i + 4] = array[i + 4];\n        colors[2 * i + 5] = array[i + 5];\n      }\n    } else {\n      for (let i = 0; i < length; i += itemSize) {\n        colors[2 * i] = array[i];\n        colors[2 * i + 1] = array[i + 1];\n        colors[2 * i + 2] = array[i + 2];\n        colors[2 * i + 3] = array[i + 3];\n        colors[2 * i + 4] = array[i + 4];\n        colors[2 * i + 5] = array[i + 5];\n        colors[2 * i + 6] = array[i + 6];\n        colors[2 * i + 7] = array[i + 7];\n      }\n    }\n    super.setColors(colors, itemSize);\n    return this;\n  }\n  fromLine(line) {\n    const geometry = line.geometry;\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n}\nexport {\n  LineGeometry\n};\n//# sourceMappingURL=LineGeometry.js.map\n","import { ShaderMaterial, UniformsUtils, UniformsLib, Vector2 } from \"three\";\nimport { version } from \"../_polyfill/constants.js\";\nclass LineMaterial extends ShaderMaterial {\n  constructor(parameters) {\n    super({\n      type: \"LineMaterial\",\n      uniforms: UniformsUtils.clone(\n        UniformsUtils.merge([\n          UniformsLib.common,\n          UniformsLib.fog,\n          {\n            worldUnits: { value: 1 },\n            linewidth: { value: 1 },\n            resolution: { value: new Vector2(1, 1) },\n            dashOffset: { value: 0 },\n            dashScale: { value: 1 },\n            dashSize: { value: 1 },\n            gapSize: { value: 1 }\n            // todo FIX - maybe change to totalSize\n          }\n        ])\n      ),\n      vertexShader: (\n        /* glsl */\n        `\n\t\t\t\t#include <common>\n\t\t\t\t#include <fog_pars_vertex>\n\t\t\t\t#include <logdepthbuf_pars_vertex>\n\t\t\t\t#include <clipping_planes_pars_vertex>\n\n\t\t\t\tuniform float linewidth;\n\t\t\t\tuniform vec2 resolution;\n\n\t\t\t\tattribute vec3 instanceStart;\n\t\t\t\tattribute vec3 instanceEnd;\n\n\t\t\t\t#ifdef USE_COLOR\n\t\t\t\t\t#ifdef USE_LINE_COLOR_ALPHA\n\t\t\t\t\t\tvarying vec4 vLineColor;\n\t\t\t\t\t\tattribute vec4 instanceColorStart;\n\t\t\t\t\t\tattribute vec4 instanceColorEnd;\n\t\t\t\t\t#else\n\t\t\t\t\t\tvarying vec3 vLineColor;\n\t\t\t\t\t\tattribute vec3 instanceColorStart;\n\t\t\t\t\t\tattribute vec3 instanceColorEnd;\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\n\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\tvarying vec4 worldPos;\n\t\t\t\t\tvarying vec3 worldStart;\n\t\t\t\t\tvarying vec3 worldEnd;\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#else\n\n\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t#endif\n\n\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\tuniform float dashScale;\n\t\t\t\t\tattribute float instanceDistanceStart;\n\t\t\t\t\tattribute float instanceDistanceEnd;\n\t\t\t\t\tvarying float vLineDistance;\n\n\t\t\t\t#endif\n\n\t\t\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t\t\t// conservative estimate of the near plane\n\t\t\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\t#ifdef USE_COLOR\n\n\t\t\t\t\t\tvLineColor = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\t\t\t\t\t\tvUv = uv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\t\t\t// camera space\n\t\t\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\t\tworldStart = start.xyz;\n\t\t\t\t\t\tworldEnd = end.xyz;\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tvUv = uv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\t\t\tif ( perspective ) {\n\n\t\t\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// clip space\n\t\t\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t\t\t// ndc space\n\t\t\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t\t\t// direction\n\t\t\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t\t\t// account for clip-space aspect ratio\n\t\t\t\t\tdir.x *= aspect;\n\t\t\t\t\tdir = normalize( dir );\n\n\t\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\t\t// get the offset direction as perpendicular to the view vector\n\t\t\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\t\t\tvec3 offset;\n\t\t\t\t\t\tif ( position.y < 0.5 ) {\n\n\t\t\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// sign flip\n\t\t\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n\t\t\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t\t\t// extend the line bounds to encompass  endcaps\n\t\t\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\n\t\t\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\n\n\t\t\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\n\t\t\t\t\t\t\toffset.xy -= dir * forwardOffset;\n\t\t\t\t\t\t\toffset.z += 0.5;\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// endcaps\n\t\t\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// adjust for linewidth\n\t\t\t\t\t\toffset *= linewidth * 0.5;\n\n\t\t\t\t\t\t// set the world position\n\t\t\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\n\t\t\t\t\t\tworldPos.xyz += offset;\n\n\t\t\t\t\t\t// project the worldpos\n\t\t\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t\t\t// segments overlap neatly\n\t\t\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\t\t\tdir.x /= aspect;\n\t\t\t\t\t\toffset.x /= aspect;\n\n\t\t\t\t\t\t// sign flip\n\t\t\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t\t\t// endcaps\n\t\t\t\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\t\t\t\toffset += - dir;\n\n\t\t\t\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\t\t\t\toffset += dir;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// adjust for linewidth\n\t\t\t\t\t\toffset *= linewidth;\n\n\t\t\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\t\t\toffset /= resolution.y;\n\n\t\t\t\t\t\t// select end\n\t\t\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t\t\t\t// back to clip space\n\t\t\t\t\t\toffset *= clip.w;\n\n\t\t\t\t\t\tclip.xy += offset;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tgl_Position = clip;\n\n\t\t\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t\t\t#include <logdepthbuf_vertex>\n\t\t\t\t\t#include <clipping_planes_vertex>\n\t\t\t\t\t#include <fog_vertex>\n\n\t\t\t\t}\n\t\t\t`\n      ),\n      fragmentShader: (\n        /* glsl */\n        `\n\t\t\t\tuniform vec3 diffuse;\n\t\t\t\tuniform float opacity;\n\t\t\t\tuniform float linewidth;\n\n\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\tuniform float dashOffset;\n\t\t\t\t\tuniform float dashSize;\n\t\t\t\t\tuniform float gapSize;\n\n\t\t\t\t#endif\n\n\t\t\t\tvarying float vLineDistance;\n\n\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\tvarying vec4 worldPos;\n\t\t\t\t\tvarying vec3 worldStart;\n\t\t\t\t\tvarying vec3 worldEnd;\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#else\n\n\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t#endif\n\n\t\t\t\t#include <common>\n\t\t\t\t#include <fog_pars_fragment>\n\t\t\t\t#include <logdepthbuf_pars_fragment>\n\t\t\t\t#include <clipping_planes_pars_fragment>\n\n\t\t\t\t#ifdef USE_COLOR\n\t\t\t\t\t#ifdef USE_LINE_COLOR_ALPHA\n\t\t\t\t\t\tvarying vec4 vLineColor;\n\t\t\t\t\t#else\n\t\t\t\t\t\tvarying vec3 vLineColor;\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\n\t\t\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\t\t\tfloat mua;\n\t\t\t\t\tfloat mub;\n\n\t\t\t\t\tvec3 p13 = p1 - p3;\n\t\t\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\t\t\tmua = numer / denom;\n\t\t\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\t\t\treturn vec2( mua, mub );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tfloat alpha = opacity;\n\n\t\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\t\t\tfloat len = length( delta );\n\t\t\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t\t\t#else\n\n\t\t\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t#else\n\n\t\t\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\t\t\t\t\t#ifdef USE_COLOR\n\t\t\t\t\t\t#ifdef USE_LINE_COLOR_ALPHA\n\t\t\t\t\t\t\tdiffuseColor *= vLineColor;\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tdiffuseColor.rgb *= vLineColor;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#include <logdepthbuf_fragment>\n\n\t\t\t\t\tgl_FragColor = diffuseColor;\n\n\t\t\t\t\t#include <tonemapping_fragment>\n\t\t\t\t\t#include <${version >= 154 ? \"colorspace_fragment\" : \"encodings_fragment\"}>\n\t\t\t\t\t#include <fog_fragment>\n\t\t\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t\t\t}\n\t\t\t`\n      ),\n      clipping: true\n      // required for clipping support\n    });\n    this.isLineMaterial = true;\n    this.onBeforeCompile = function() {\n      if (this.transparent) {\n        this.defines.USE_LINE_COLOR_ALPHA = \"1\";\n      } else {\n        delete this.defines.USE_LINE_COLOR_ALPHA;\n      }\n    };\n    Object.defineProperties(this, {\n      color: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.diffuse.value;\n        },\n        set: function(value) {\n          this.uniforms.diffuse.value = value;\n        }\n      },\n      worldUnits: {\n        enumerable: true,\n        get: function() {\n          return \"WORLD_UNITS\" in this.defines;\n        },\n        set: function(value) {\n          if (value === true) {\n            this.defines.WORLD_UNITS = \"\";\n          } else {\n            delete this.defines.WORLD_UNITS;\n          }\n        }\n      },\n      linewidth: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.linewidth.value;\n        },\n        set: function(value) {\n          this.uniforms.linewidth.value = value;\n        }\n      },\n      dashed: {\n        enumerable: true,\n        get: function() {\n          return Boolean(\"USE_DASH\" in this.defines);\n        },\n        set(value) {\n          if (Boolean(value) !== Boolean(\"USE_DASH\" in this.defines)) {\n            this.needsUpdate = true;\n          }\n          if (value === true) {\n            this.defines.USE_DASH = \"\";\n          } else {\n            delete this.defines.USE_DASH;\n          }\n        }\n      },\n      dashScale: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.dashScale.value;\n        },\n        set: function(value) {\n          this.uniforms.dashScale.value = value;\n        }\n      },\n      dashSize: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.dashSize.value;\n        },\n        set: function(value) {\n          this.uniforms.dashSize.value = value;\n        }\n      },\n      dashOffset: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.dashOffset.value;\n        },\n        set: function(value) {\n          this.uniforms.dashOffset.value = value;\n        }\n      },\n      gapSize: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.gapSize.value;\n        },\n        set: function(value) {\n          this.uniforms.gapSize.value = value;\n        }\n      },\n      opacity: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.opacity.value;\n        },\n        set: function(value) {\n          this.uniforms.opacity.value = value;\n        }\n      },\n      resolution: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.resolution.value;\n        },\n        set: function(value) {\n          this.uniforms.resolution.value.copy(value);\n        }\n      },\n      alphaToCoverage: {\n        enumerable: true,\n        get: function() {\n          return Boolean(\"USE_ALPHA_TO_COVERAGE\" in this.defines);\n        },\n        set: function(value) {\n          if (Boolean(value) !== Boolean(\"USE_ALPHA_TO_COVERAGE\" in this.defines)) {\n            this.needsUpdate = true;\n          }\n          if (value === true) {\n            this.defines.USE_ALPHA_TO_COVERAGE = \"\";\n            this.extensions.derivatives = true;\n          } else {\n            delete this.defines.USE_ALPHA_TO_COVERAGE;\n            this.extensions.derivatives = false;\n          }\n        }\n      }\n    });\n    this.setValues(parameters);\n  }\n}\nexport {\n  LineMaterial\n};\n//# sourceMappingURL=LineMaterial.js.map\n","import { Mesh, InstancedInterleavedBuffer, InterleavedBufferAttribute, Vector4, Vector3, Box3, Sphere, MathUtils, Matrix4, Line3 } from \"three\";\nimport { LineSegmentsGeometry } from \"./LineSegmentsGeometry.js\";\nimport { LineMaterial } from \"./LineMaterial.js\";\nimport { UV1 } from \"../_polyfill/uv1.js\";\nconst _viewport = /* @__PURE__ */ new Vector4();\nconst _start = /* @__PURE__ */ new Vector3();\nconst _end = /* @__PURE__ */ new Vector3();\nconst _start4 = /* @__PURE__ */ new Vector4();\nconst _end4 = /* @__PURE__ */ new Vector4();\nconst _ssOrigin = /* @__PURE__ */ new Vector4();\nconst _ssOrigin3 = /* @__PURE__ */ new Vector3();\nconst _mvMatrix = /* @__PURE__ */ new Matrix4();\nconst _line = /* @__PURE__ */ new Line3();\nconst _closestPoint = /* @__PURE__ */ new Vector3();\nconst _box = /* @__PURE__ */ new Box3();\nconst _sphere = /* @__PURE__ */ new Sphere();\nconst _clipToWorldVector = /* @__PURE__ */ new Vector4();\nlet _ray, _lineWidth;\nfunction getWorldSpaceHalfWidth(camera, distance, resolution) {\n  _clipToWorldVector.set(0, 0, -distance, 1).applyMatrix4(camera.projectionMatrix);\n  _clipToWorldVector.multiplyScalar(1 / _clipToWorldVector.w);\n  _clipToWorldVector.x = _lineWidth / resolution.width;\n  _clipToWorldVector.y = _lineWidth / resolution.height;\n  _clipToWorldVector.applyMatrix4(camera.projectionMatrixInverse);\n  _clipToWorldVector.multiplyScalar(1 / _clipToWorldVector.w);\n  return Math.abs(Math.max(_clipToWorldVector.x, _clipToWorldVector.y));\n}\nfunction raycastWorldUnits(lineSegments, intersects) {\n  const matrixWorld = lineSegments.matrixWorld;\n  const geometry = lineSegments.geometry;\n  const instanceStart = geometry.attributes.instanceStart;\n  const instanceEnd = geometry.attributes.instanceEnd;\n  const segmentCount = Math.min(geometry.instanceCount, instanceStart.count);\n  for (let i = 0, l = segmentCount; i < l; i++) {\n    _line.start.fromBufferAttribute(instanceStart, i);\n    _line.end.fromBufferAttribute(instanceEnd, i);\n    _line.applyMatrix4(matrixWorld);\n    const pointOnLine = new Vector3();\n    const point = new Vector3();\n    _ray.distanceSqToSegment(_line.start, _line.end, point, pointOnLine);\n    const isInside = point.distanceTo(pointOnLine) < _lineWidth * 0.5;\n    if (isInside) {\n      intersects.push({\n        point,\n        pointOnLine,\n        distance: _ray.origin.distanceTo(point),\n        object: lineSegments,\n        face: null,\n        faceIndex: i,\n        uv: null,\n        [UV1]: null\n      });\n    }\n  }\n}\nfunction raycastScreenSpace(lineSegments, camera, intersects) {\n  const projectionMatrix = camera.projectionMatrix;\n  const material = lineSegments.material;\n  const resolution = material.resolution;\n  const matrixWorld = lineSegments.matrixWorld;\n  const geometry = lineSegments.geometry;\n  const instanceStart = geometry.attributes.instanceStart;\n  const instanceEnd = geometry.attributes.instanceEnd;\n  const segmentCount = Math.min(geometry.instanceCount, instanceStart.count);\n  const near = -camera.near;\n  _ray.at(1, _ssOrigin);\n  _ssOrigin.w = 1;\n  _ssOrigin.applyMatrix4(camera.matrixWorldInverse);\n  _ssOrigin.applyMatrix4(projectionMatrix);\n  _ssOrigin.multiplyScalar(1 / _ssOrigin.w);\n  _ssOrigin.x *= resolution.x / 2;\n  _ssOrigin.y *= resolution.y / 2;\n  _ssOrigin.z = 0;\n  _ssOrigin3.copy(_ssOrigin);\n  _mvMatrix.multiplyMatrices(camera.matrixWorldInverse, matrixWorld);\n  for (let i = 0, l = segmentCount; i < l; i++) {\n    _start4.fromBufferAttribute(instanceStart, i);\n    _end4.fromBufferAttribute(instanceEnd, i);\n    _start4.w = 1;\n    _end4.w = 1;\n    _start4.applyMatrix4(_mvMatrix);\n    _end4.applyMatrix4(_mvMatrix);\n    const isBehindCameraNear = _start4.z > near && _end4.z > near;\n    if (isBehindCameraNear) {\n      continue;\n    }\n    if (_start4.z > near) {\n      const deltaDist = _start4.z - _end4.z;\n      const t = (_start4.z - near) / deltaDist;\n      _start4.lerp(_end4, t);\n    } else if (_end4.z > near) {\n      const deltaDist = _end4.z - _start4.z;\n      const t = (_end4.z - near) / deltaDist;\n      _end4.lerp(_start4, t);\n    }\n    _start4.applyMatrix4(projectionMatrix);\n    _end4.applyMatrix4(projectionMatrix);\n    _start4.multiplyScalar(1 / _start4.w);\n    _end4.multiplyScalar(1 / _end4.w);\n    _start4.x *= resolution.x / 2;\n    _start4.y *= resolution.y / 2;\n    _end4.x *= resolution.x / 2;\n    _end4.y *= resolution.y / 2;\n    _line.start.copy(_start4);\n    _line.start.z = 0;\n    _line.end.copy(_end4);\n    _line.end.z = 0;\n    const param = _line.closestPointToPointParameter(_ssOrigin3, true);\n    _line.at(param, _closestPoint);\n    const zPos = MathUtils.lerp(_start4.z, _end4.z, param);\n    const isInClipSpace = zPos >= -1 && zPos <= 1;\n    const isInside = _ssOrigin3.distanceTo(_closestPoint) < _lineWidth * 0.5;\n    if (isInClipSpace && isInside) {\n      _line.start.fromBufferAttribute(instanceStart, i);\n      _line.end.fromBufferAttribute(instanceEnd, i);\n      _line.start.applyMatrix4(matrixWorld);\n      _line.end.applyMatrix4(matrixWorld);\n      const pointOnLine = new Vector3();\n      const point = new Vector3();\n      _ray.distanceSqToSegment(_line.start, _line.end, point, pointOnLine);\n      intersects.push({\n        point,\n        pointOnLine,\n        distance: _ray.origin.distanceTo(point),\n        object: lineSegments,\n        face: null,\n        faceIndex: i,\n        uv: null,\n        [UV1]: null\n      });\n    }\n  }\n}\nclass LineSegments2 extends Mesh {\n  constructor(geometry = new LineSegmentsGeometry(), material = new LineMaterial({ color: Math.random() * 16777215 })) {\n    super(geometry, material);\n    this.isLineSegments2 = true;\n    this.type = \"LineSegments2\";\n  }\n  // for backwards-compatibility, but could be a method of LineSegmentsGeometry...\n  computeLineDistances() {\n    const geometry = this.geometry;\n    const instanceStart = geometry.attributes.instanceStart;\n    const instanceEnd = geometry.attributes.instanceEnd;\n    const lineDistances = new Float32Array(2 * instanceStart.count);\n    for (let i = 0, j = 0, l = instanceStart.count; i < l; i++, j += 2) {\n      _start.fromBufferAttribute(instanceStart, i);\n      _end.fromBufferAttribute(instanceEnd, i);\n      lineDistances[j] = j === 0 ? 0 : lineDistances[j - 1];\n      lineDistances[j + 1] = lineDistances[j] + _start.distanceTo(_end);\n    }\n    const instanceDistanceBuffer = new InstancedInterleavedBuffer(lineDistances, 2, 1);\n    geometry.setAttribute(\"instanceDistanceStart\", new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 0));\n    geometry.setAttribute(\"instanceDistanceEnd\", new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 1));\n    return this;\n  }\n  raycast(raycaster, intersects) {\n    const worldUnits = this.material.worldUnits;\n    const camera = raycaster.camera;\n    if (camera === null && !worldUnits) {\n      console.error(\n        'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.'\n      );\n    }\n    const threshold = raycaster.params.Line2 !== void 0 ? raycaster.params.Line2.threshold || 0 : 0;\n    _ray = raycaster.ray;\n    const matrixWorld = this.matrixWorld;\n    const geometry = this.geometry;\n    const material = this.material;\n    _lineWidth = material.linewidth + threshold;\n    if (geometry.boundingSphere === null) {\n      geometry.computeBoundingSphere();\n    }\n    _sphere.copy(geometry.boundingSphere).applyMatrix4(matrixWorld);\n    let sphereMargin;\n    if (worldUnits) {\n      sphereMargin = _lineWidth * 0.5;\n    } else {\n      const distanceToSphere = Math.max(camera.near, _sphere.distanceToPoint(_ray.origin));\n      sphereMargin = getWorldSpaceHalfWidth(camera, distanceToSphere, material.resolution);\n    }\n    _sphere.radius += sphereMargin;\n    if (_ray.intersectsSphere(_sphere) === false) {\n      return;\n    }\n    if (geometry.boundingBox === null) {\n      geometry.computeBoundingBox();\n    }\n    _box.copy(geometry.boundingBox).applyMatrix4(matrixWorld);\n    let boxMargin;\n    if (worldUnits) {\n      boxMargin = _lineWidth * 0.5;\n    } else {\n      const distanceToBox = Math.max(camera.near, _box.distanceToPoint(_ray.origin));\n      boxMargin = getWorldSpaceHalfWidth(camera, distanceToBox, material.resolution);\n    }\n    _box.expandByScalar(boxMargin);\n    if (_ray.intersectsBox(_box) === false) {\n      return;\n    }\n    if (worldUnits) {\n      raycastWorldUnits(this, intersects);\n    } else {\n      raycastScreenSpace(this, camera, intersects);\n    }\n  }\n  onBeforeRender(renderer) {\n    const uniforms = this.material.uniforms;\n    if (uniforms && uniforms.resolution) {\n      renderer.getViewport(_viewport);\n      this.material.uniforms.resolution.value.set(_viewport.z, _viewport.w);\n    }\n  }\n}\nexport {\n  LineSegments2\n};\n//# sourceMappingURL=LineSegments2.js.map\n","import { LineSegments2 } from \"./LineSegments2.js\";\nimport { LineGeometry } from \"./LineGeometry.js\";\nimport { LineMaterial } from \"./LineMaterial.js\";\nclass Line2 extends LineSegments2 {\n  constructor(geometry = new LineGeometry(), material = new LineMaterial({ color: Math.random() * 16777215 })) {\n    super(geometry, material);\n    this.isLine2 = true;\n    this.type = \"Line2\";\n  }\n}\nexport {\n  Line2\n};\n//# sourceMappingURL=Line2.js.map\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { Vector3, DoubleSide, OrthographicCamera, PerspectiveCamera, Vector2 } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst v1 = /* @__PURE__ */new Vector3();\nconst v2 = /* @__PURE__ */new Vector3();\nconst v3 = /* @__PURE__ */new Vector3();\nconst v4 = /* @__PURE__ */new Vector2();\nfunction defaultCalculatePosition(el, camera, size) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\nfunction isObjectBehindCamera(el, camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\nfunction isObjectVisible(el, camera, raycaster, occlude) {\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const screenPos = elPos.clone();\n  screenPos.project(camera);\n  v4.set(screenPos.x, screenPos.y);\n  raycaster.setFromCamera(v4, camera);\n  const intersects = raycaster.intersectObjects(occlude, true);\n  if (intersects.length) {\n    const intersectionDistance = intersects[0].distance;\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n    return pointDistance < intersectionDistance;\n  }\n  return true;\n}\nfunction objectScale(el, camera) {\n  if (camera instanceof OrthographicCamera) {\n    return camera.zoom;\n  } else if (camera instanceof PerspectiveCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = camera.fov * Math.PI / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n    return 1 / scaleFOV;\n  } else {\n    return 1;\n  }\n}\nfunction objectZIndex(el, camera, zIndexRange) {\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n  return undefined;\n}\nconst epsilon = value => Math.abs(value) < 1e-10 ? 0 : value;\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\n  let matrix3d = 'matrix3d(';\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n  }\n  return prepend + matrix3d;\n}\nconst getCameraCSSMatrix = (multipliers => {\n  return matrix => getCSSMatrix(matrix, multipliers);\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\nconst getObjectCSSMatrix = (scaleMultipliers => {\n  return (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');\n})(f => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\nfunction isRefObject(ref) {\n  return ref && typeof ref === 'object' && 'current' in ref;\n}\nconst Html = /* @__PURE__ */React.forwardRef(({\n  children,\n  eps = 0.001,\n  style,\n  className,\n  prepend,\n  center,\n  fullscreen,\n  portal,\n  distanceFactor,\n  sprite = false,\n  transform = false,\n  occlude,\n  onOcclude,\n  castShadow,\n  receiveShadow,\n  material,\n  geometry,\n  zIndexRange = [16777271, 0],\n  calculatePosition = defaultCalculatePosition,\n  as = 'div',\n  wrapperClass,\n  pointerEvents = 'auto',\n  ...props\n}, ref) => {\n  const {\n    gl,\n    camera,\n    scene,\n    size,\n    raycaster,\n    events,\n    viewport\n  } = useThree();\n  const [el] = React.useState(() => document.createElement(as));\n  const root = React.useRef();\n  const group = React.useRef(null);\n  const oldZoom = React.useRef(0);\n  const oldPosition = React.useRef([0, 0]);\n  const transformOuterRef = React.useRef(null);\n  const transformInnerRef = React.useRef(null);\n  // Append to the connected element, which makes HTML work with views\n  const target = (portal == null ? void 0 : portal.current) || events.connected || gl.domElement.parentNode;\n  const occlusionMeshRef = React.useRef(null);\n  const isMeshSizeSet = React.useRef(false);\n  const isRayCastOcclusion = React.useMemo(() => {\n    return occlude && occlude !== 'blending' || Array.isArray(occlude) && occlude.length && isRefObject(occlude[0]);\n  }, [occlude]);\n  React.useLayoutEffect(() => {\n    const el = gl.domElement;\n    if (occlude && occlude === 'blending') {\n      el.style.zIndex = `${Math.floor(zIndexRange[0] / 2)}`;\n      el.style.position = 'absolute';\n      el.style.pointerEvents = 'none';\n    } else {\n      el.style.zIndex = null;\n      el.style.position = null;\n      el.style.pointerEvents = null;\n    }\n  }, [occlude]);\n  React.useLayoutEffect(() => {\n    if (group.current) {\n      const currentRoot = root.current = ReactDOM.createRoot(el);\n      scene.updateMatrixWorld();\n      if (transform) {\n        el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`;\n      } else {\n        const vec = calculatePosition(group.current, camera, size);\n        el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n      }\n      if (target) {\n        if (prepend) target.prepend(el);else target.appendChild(el);\n      }\n      return () => {\n        if (target) target.removeChild(el);\n        currentRoot.unmount();\n      };\n    }\n  }, [target, transform]);\n  React.useLayoutEffect(() => {\n    if (wrapperClass) el.className = wrapperClass;\n  }, [wrapperClass]);\n  const styles = React.useMemo(() => {\n    if (transform) {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: size.width,\n        height: size.height,\n        transformStyle: 'preserve-3d',\n        pointerEvents: 'none'\n      };\n    } else {\n      return {\n        position: 'absolute',\n        transform: center ? 'translate3d(-50%,-50%,0)' : 'none',\n        ...(fullscreen && {\n          top: -size.height / 2,\n          left: -size.width / 2,\n          width: size.width,\n          height: size.height\n        }),\n        ...style\n      };\n    }\n  }, [style, center, fullscreen, size, transform]);\n  const transformInnerStyles = React.useMemo(() => ({\n    position: 'absolute',\n    pointerEvents\n  }), [pointerEvents]);\n  React.useLayoutEffect(() => {\n    isMeshSizeSet.current = false;\n    if (transform) {\n      var _root$current;\n      (_root$current = root.current) == null || _root$current.render(/*#__PURE__*/React.createElement(\"div\", {\n        ref: transformOuterRef,\n        style: styles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformInnerRef,\n        style: transformInnerStyles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        className: className,\n        style: style,\n        children: children\n      }))));\n    } else {\n      var _root$current2;\n      (_root$current2 = root.current) == null || _root$current2.render(/*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        style: styles,\n        className: className,\n        children: children\n      }));\n    }\n  });\n  const visible = React.useRef(true);\n  useFrame(gl => {\n    if (group.current) {\n      camera.updateMatrixWorld();\n      group.current.updateWorldMatrix(true, false);\n      const vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);\n      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps || Math.abs(oldPosition.current[0] - vec[0]) > eps || Math.abs(oldPosition.current[1] - vec[1]) > eps) {\n        const isBehindCamera = isObjectBehindCamera(group.current, camera);\n        let raytraceTarget = false;\n        if (isRayCastOcclusion) {\n          if (Array.isArray(occlude)) {\n            raytraceTarget = occlude.map(item => item.current);\n          } else if (occlude !== 'blending') {\n            raytraceTarget = [scene];\n          }\n        }\n        const previouslyVisible = visible.current;\n        if (raytraceTarget) {\n          const isvisible = isObjectVisible(group.current, camera, raycaster, raytraceTarget);\n          visible.current = isvisible && !isBehindCamera;\n        } else {\n          visible.current = !isBehindCamera;\n        }\n        if (previouslyVisible !== visible.current) {\n          if (onOcclude) onOcclude(!visible.current);else el.style.display = visible.current ? 'block' : 'none';\n        }\n        const halfRange = Math.floor(zIndexRange[0] / 2);\n        const zRange = occlude ? isRayCastOcclusion //\n        ? [zIndexRange[0], halfRange] : [halfRange - 1, 0] : zIndexRange;\n        el.style.zIndex = `${objectZIndex(group.current, camera, zRange)}`;\n        if (transform) {\n          const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n          const fov = camera.projectionMatrix.elements[5] * heightHalf;\n          const {\n            isOrthographicCamera,\n            top,\n            left,\n            bottom,\n            right\n          } = camera;\n          const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n          const cameraTransform = isOrthographicCamera ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;\n          let matrix = group.current.matrixWorld;\n          if (sprite) {\n            matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.current.scale);\n            matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n            matrix.elements[15] = 1;\n          }\n          el.style.width = size.width + 'px';\n          el.style.height = size.height + 'px';\n          el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n          if (transformOuterRef.current && transformInnerRef.current) {\n            transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix, 1 / ((distanceFactor || 10) / 400));\n          }\n        } else {\n          const scale = distanceFactor === undefined ? 1 : objectScale(group.current, camera) * distanceFactor;\n          el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n        }\n        oldPosition.current = vec;\n        oldZoom.current = camera.zoom;\n      }\n    }\n    if (!isRayCastOcclusion && occlusionMeshRef.current && !isMeshSizeSet.current) {\n      if (transform) {\n        if (transformOuterRef.current) {\n          const el = transformOuterRef.current.children[0];\n          if (el != null && el.clientWidth && el != null && el.clientHeight) {\n            const {\n              isOrthographicCamera\n            } = camera;\n            if (isOrthographicCamera || geometry) {\n              if (props.scale) {\n                if (!Array.isArray(props.scale)) {\n                  occlusionMeshRef.current.scale.setScalar(1 / props.scale);\n                } else if (props.scale instanceof Vector3) {\n                  occlusionMeshRef.current.scale.copy(props.scale.clone().divideScalar(1));\n                } else {\n                  occlusionMeshRef.current.scale.set(1 / props.scale[0], 1 / props.scale[1], 1 / props.scale[2]);\n                }\n              }\n            } else {\n              const ratio = (distanceFactor || 10) / 400;\n              const w = el.clientWidth * ratio;\n              const h = el.clientHeight * ratio;\n              occlusionMeshRef.current.scale.set(w, h, 1);\n            }\n            isMeshSizeSet.current = true;\n          }\n        }\n      } else {\n        const ele = el.children[0];\n        if (ele != null && ele.clientWidth && ele != null && ele.clientHeight) {\n          const ratio = 1 / viewport.factor;\n          const w = ele.clientWidth * ratio;\n          const h = ele.clientHeight * ratio;\n          occlusionMeshRef.current.scale.set(w, h, 1);\n          isMeshSizeSet.current = true;\n        }\n        occlusionMeshRef.current.lookAt(gl.camera.position);\n      }\n    }\n  });\n  const shaders = React.useMemo(() => ({\n    vertexShader: !transform ? /* glsl */`\n          /*\n            This shader is from the THREE's SpriteMaterial.\n            We need to turn the backing plane into a Sprite\n            (make it always face the camera) if \"transfrom\"\n            is false.\n          */\n          #include <common>\n\n          void main() {\n            vec2 center = vec2(0., 1.);\n            float rotation = 0.0;\n\n            // This is somewhat arbitrary, but it seems to work well\n            // Need to figure out how to derive this dynamically if it even matters\n            float size = 0.03;\n\n            vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n            vec2 scale;\n            scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n            scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n            bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n            if ( isPerspective ) scale *= - mvPosition.z;\n\n            vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;\n            vec2 rotatedPosition;\n            rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n            rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n            mvPosition.xy += rotatedPosition;\n\n            gl_Position = projectionMatrix * mvPosition;\n          }\n      ` : undefined,\n    fragmentShader: /* glsl */`\n        void main() {\n          gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n      `\n  }), [transform]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: group\n  }), occlude && !isRayCastOcclusion && /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: castShadow,\n    receiveShadow: receiveShadow,\n    ref: occlusionMeshRef\n  }, geometry || /*#__PURE__*/React.createElement(\"planeGeometry\", null), material || /*#__PURE__*/React.createElement(\"shaderMaterial\", {\n    side: DoubleSide,\n    vertexShader: shaders.vertexShader,\n    fragmentShader: shaders.fragmentShader\n  })));\n});\n\nexport { Html };\n","import * as THREE from 'three';\n\nconst tV0 = /* @__PURE__ */new THREE.Vector3();\nconst tV1 = /* @__PURE__ */new THREE.Vector3();\nconst tV2 = /* @__PURE__ */new THREE.Vector3();\nconst getPoint2 = (point3, camera, size) => {\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  const vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\nconst getPoint3 = (point2, camera, size, zValue = 1) => {\n  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\nconst calculateScaleFactor = (point3, radiusPx, camera, size) => {\n  const point2 = getPoint2(tV2.copy(point3), camera, size);\n  let scale = 0;\n  for (let i = 0; i < 2; ++i) {\n    const point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    const point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n  return scale;\n};\n\nexport { calculateScaleFactor };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, Vector4, Vector2, Color } from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { LineSegments2, Line2, LineMaterial, LineSegmentsGeometry, LineGeometry } from 'three-stdlib';\n\nconst Line = /* @__PURE__ */React.forwardRef(function Line({\n  points,\n  color = 0xffffff,\n  vertexColors,\n  linewidth,\n  lineWidth,\n  segments,\n  dashed,\n  ...rest\n}, ref) {\n  var _vertexColors$, _ref;\n  const size = useThree(state => state.size);\n  const line2 = React.useMemo(() => segments ? new LineSegments2() : new Line2(), [segments]);\n  const [lineMaterial] = React.useState(() => new LineMaterial());\n  const itemSize = (vertexColors == null || (_vertexColors$ = vertexColors[0]) == null ? void 0 : _vertexColors$.length) === 4 ? 4 : 3;\n  const lineGeom = React.useMemo(() => {\n    const geom = segments ? new LineSegmentsGeometry() : new LineGeometry();\n    const pValues = points.map(p => {\n      const isArray = Array.isArray(p);\n      return p instanceof Vector3 || p instanceof Vector4 ? [p.x, p.y, p.z] : p instanceof Vector2 ? [p.x, p.y, 0] : isArray && p.length === 3 ? [p[0], p[1], p[2]] : isArray && p.length === 2 ? [p[0], p[1], 0] : p;\n    });\n    geom.setPositions(pValues.flat());\n    if (vertexColors) {\n      // using vertexColors requires the color value to be white see #1813\n      color = 0xffffff;\n      const cValues = vertexColors.map(c => c instanceof Color ? c.toArray() : c);\n      geom.setColors(cValues.flat(), itemSize);\n    }\n    return geom;\n  }, [points, segments, vertexColors, itemSize]);\n  React.useLayoutEffect(() => {\n    line2.computeLineDistances();\n  }, [points, line2]);\n  React.useLayoutEffect(() => {\n    if (dashed) {\n      lineMaterial.defines.USE_DASH = '';\n    } else {\n      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\n      delete lineMaterial.defines.USE_DASH;\n    }\n    lineMaterial.needsUpdate = true;\n  }, [dashed, lineMaterial]);\n  React.useEffect(() => {\n    return () => {\n      lineGeom.dispose();\n      lineMaterial.dispose();\n    };\n  }, [lineGeom]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: line2,\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"primitive\", {\n    object: lineGeom,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: lineMaterial,\n    attach: \"material\",\n    color: color,\n    vertexColors: Boolean(vertexColors),\n    resolution: [size.width, size.height],\n    linewidth: (_ref = linewidth !== null && linewidth !== void 0 ? linewidth : lineWidth) !== null && _ref !== void 0 ? _ref : 1,\n    dashed: dashed,\n    transparent: itemSize === 4\n  }, rest)));\n});\n\nexport { Line };\n","import * as React from 'react';\n\nconst context = /* @__PURE__ */React.createContext(null);\n\nexport { context };\n","import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst vec1 = /* @__PURE__ */new THREE.Vector3();\nconst vec2 = /* @__PURE__ */new THREE.Vector3();\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nconst upV = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst offsetMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst AxisArrow = ({\n  direction,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offset0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    clickInfo.current = {\n      clickPoint,\n      dir\n    };\n    offset0.current = translation.current[axis];\n    onDragStart({\n      component: 'Arrow',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore - setPointerCapture is not in the type definition\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, direction, camControls, onDragStart, translation, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir\n      } = clickInfo.current;\n      const [min, max] = (translationLimits == null ? void 0 : translationLimits[axis]) || [undefined, undefined];\n      let offset = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n      if (min !== undefined) {\n        offset = Math.max(offset, min - offset0.current);\n      }\n      if (max !== undefined) {\n        offset = Math.min(offset, max - offset0.current);\n      }\n      translation.current[axis] = offset0.current + offset;\n      if (annotations) {\n        divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      }\n      offsetMatrix.makeTranslation(dir.x * offset, dir.y * offset, dir.z * offset);\n      onDrag(offsetMatrix);\n    }\n  }, [annotations, onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    cylinderLength,\n    coneWidth,\n    coneLength,\n    matrixL\n  } = React.useMemo(() => {\n    const coneWidth = fixed ? lineWidth / scale * 1.6 : scale / 20;\n    const coneLength = fixed ? 0.2 : scale / 5;\n    const cylinderLength = fixed ? 1 - coneLength : scale - coneLength;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      cylinderLength,\n      coneWidth,\n      coneLength,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color_ = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, -coneLength, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: false,\n    position: [0, (cylinderLength + coneLength) / 2.0, 0],\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"cylinderGeometry\", {\n    args: [coneWidth * 1.4, coneWidth * 1.4, cylinderLength + coneLength, 8, 1]\n  })), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: [0, 0, 0, 0, cylinderLength, 0],\n    lineWidth: lineWidth,\n    side: THREE.DoubleSide,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    renderOrder: 1,\n    polygonOffsetFactor: -10,\n    fog: false\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: () => null,\n    position: [0, cylinderLength + coneLength / 2.0, 0],\n    renderOrder: 500\n  }, /*#__PURE__*/React.createElement(\"coneGeometry\", {\n    args: [coneWidth, coneLength, 24, 1]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    fog: false\n  }))));\n};\n\nexport { AxisArrow, calculateOffset };\n","import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst clickDir = /* @__PURE__ */new THREE.Vector3();\nconst intersectionDir = /* @__PURE__ */new THREE.Vector3();\nconst toDegrees = radians => radians * 180 / Math.PI;\nconst toRadians = degrees => degrees * Math.PI / 180;\nconst calculateAngle = (clickPoint, intersectionPoint, origin, e1, e2) => {\n  clickDir.copy(clickPoint).sub(origin);\n  intersectionDir.copy(intersectionPoint).sub(origin);\n  const dote1e1 = e1.dot(e1);\n  const dote2e2 = e2.dot(e2);\n  const uClick = clickDir.dot(e1) / dote1e1;\n  const vClick = clickDir.dot(e2) / dote2e2;\n  const uIntersection = intersectionDir.dot(e1) / dote1e1;\n  const vIntersection = intersectionDir.dot(e2) / dote2e2;\n  const angleClick = Math.atan2(vClick, uClick);\n  const angleIntersection = Math.atan2(vIntersection, uIntersection);\n  return angleIntersection - angleClick;\n};\nconst fmod = (num, denom) => {\n  let k = Math.floor(num / denom);\n  k = k < 0 ? k + 1 : k;\n  return num - k * denom;\n};\nconst minimizeAngle = angle => {\n  let result = fmod(angle, 2 * Math.PI);\n  if (Math.abs(result) < 1e-6) {\n    return 0.0;\n  }\n  if (result < 0.0) {\n    result += 2 * Math.PI;\n  }\n  return result;\n};\nconst rotMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst posNew = /* @__PURE__ */new THREE.Vector3();\nconst ray = /* @__PURE__ */new THREE.Ray();\nconst intersection = /* @__PURE__ */new THREE.Vector3();\nconst AxisRotator = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    rotationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const angle0 = React.useRef(0);\n  const angle = React.useRef(0);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${toDegrees(angle.current).toFixed(0)}º`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      origin,\n      e1,\n      e2,\n      normal,\n      plane\n    };\n    onDragStart({\n      component: 'Rotator',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        origin,\n        e1,\n        e2,\n        normal,\n        plane\n      } = clickInfo.current;\n      const [min, max] = (rotationLimits == null ? void 0 : rotationLimits[axis]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      let deltaAngle = calculateAngle(clickPoint, intersection, origin, e1, e2);\n      let degrees = toDegrees(deltaAngle);\n\n      // @ts-ignore\n      if (e.shiftKey) {\n        degrees = Math.round(degrees / 10) * 10;\n        deltaAngle = toRadians(degrees);\n      }\n      if (min !== undefined && max !== undefined && max - min < 2 * Math.PI) {\n        deltaAngle = minimizeAngle(deltaAngle);\n        deltaAngle = deltaAngle > Math.PI ? deltaAngle - 2 * Math.PI : deltaAngle;\n        deltaAngle = THREE.MathUtils.clamp(deltaAngle, min - angle0.current, max - angle0.current);\n        angle.current = angle0.current + deltaAngle;\n      } else {\n        angle.current = minimizeAngle(angle0.current + deltaAngle);\n        angle.current = angle.current > Math.PI ? angle.current - 2 * Math.PI : angle.current;\n      }\n      if (annotations) {\n        degrees = toDegrees(angle.current);\n        divRef.current.innerText = `${degrees.toFixed(0)}º`;\n      }\n      rotMatrix.makeRotationAxis(normal, deltaAngle);\n      posNew.copy(origin).applyMatrix4(rotMatrix).sub(origin).negate();\n      rotMatrix.setPosition(posNew);\n      onDrag(rotMatrix);\n    }\n  }, [annotations, onDrag, isHovered, rotationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    angle0.current = angle.current;\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const r = fixed ? 0.65 : scale * 0.65;\n  const arc = React.useMemo(() => {\n    const segments = 32;\n    const points = [];\n    for (let j = 0; j <= segments; j++) {\n      const angle = j * (Math.PI / 2) / segments;\n      points.push(new THREE.Vector3(Math.cos(angle) * r, Math.sin(angle) * r, 0));\n    }\n    return points;\n  }, [r]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [r, r, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(Line, {\n    points: arc,\n    lineWidth: lineWidth * 4,\n    visible: false,\n    userData: userData\n  }), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: arc,\n    lineWidth: lineWidth,\n    side: THREE.DoubleSide,\n    color: isHovered ? hoveredColor : axisColors[axis],\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    fog: false\n  }));\n};\n\nexport { AxisRotator };\n","import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst decomposeIntoBasis = (e1, e2, offset) => {\n  const i1 = Math.abs(e1.x) >= Math.abs(e1.y) && Math.abs(e1.x) >= Math.abs(e1.z) ? 0 : Math.abs(e1.y) >= Math.abs(e1.x) && Math.abs(e1.y) >= Math.abs(e1.z) ? 1 : 2;\n  const e2DegrowthOrder = [0, 1, 2].sort((a, b) => Math.abs(e2.getComponent(b)) - Math.abs(e2.getComponent(a)));\n  const i2 = i1 === e2DegrowthOrder[0] ? e2DegrowthOrder[1] : e2DegrowthOrder[0];\n  const a1 = e1.getComponent(i1);\n  const a2 = e1.getComponent(i2);\n  const b1 = e2.getComponent(i1);\n  const b2 = e2.getComponent(i2);\n  const c1 = offset.getComponent(i1);\n  const c2 = offset.getComponent(i2);\n  const y = (c2 - c1 * (a2 / a1)) / (b2 - b1 * (a2 / a1));\n  const x = (c1 - y * b1) / a1;\n  return [x, y];\n};\nconst ray = /* @__PURE__ */new THREE.Ray();\nconst intersection = /* @__PURE__ */new THREE.Vector3();\nconst offsetMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst PlaneSlider = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offsetX0 = React.useRef(0);\n  const offsetY0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      e1,\n      e2,\n      plane\n    };\n    offsetX0.current = translation.current[(axis + 1) % 3];\n    offsetY0.current = translation.current[(axis + 2) % 3];\n    onDragStart({\n      component: 'Slider',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        e1,\n        e2,\n        plane\n      } = clickInfo.current;\n      const [minX, maxX] = (translationLimits == null ? void 0 : translationLimits[(axis + 1) % 3]) || [undefined, undefined];\n      const [minY, maxY] = (translationLimits == null ? void 0 : translationLimits[(axis + 2) % 3]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      intersection.sub(clickPoint);\n      let [offsetX, offsetY] = decomposeIntoBasis(e1, e2, intersection);\n      /* let offsetY = (intersection.y - (intersection.x * e1.y) / e1.x) / (e2.y - (e2.x * e1.y) / e1.x)\n      let offsetX = (intersection.x - offsetY * e2.x) / e1.x */\n      if (minX !== undefined) {\n        offsetX = Math.max(offsetX, minX - offsetX0.current);\n      }\n      if (maxX !== undefined) {\n        offsetX = Math.min(offsetX, maxX - offsetX0.current);\n      }\n      if (minY !== undefined) {\n        offsetY = Math.max(offsetY, minY - offsetY0.current);\n      }\n      if (maxY !== undefined) {\n        offsetY = Math.min(offsetY, maxY - offsetY0.current);\n      }\n      translation.current[(axis + 1) % 3] = offsetX0.current + offsetX;\n      translation.current[(axis + 2) % 3] = offsetY0.current + offsetY;\n      if (annotations) {\n        divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      }\n      offsetMatrix.makeTranslation(offsetX * e1.x + offsetY * e2.x, offsetX * e1.y + offsetY * e2.y, offsetX * e1.z + offsetY * e2.z);\n      onDrag(offsetMatrix);\n    }\n  }, [annotations, onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const pos1 = fixed ? 1 / 7 : scale / 7;\n  const length = fixed ? 0.225 : scale * 0.225;\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  const points = React.useMemo(() => [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, length, 0), new THREE.Vector3(length, length, 0), new THREE.Vector3(length, 0, 0), new THREE.Vector3(0, 0, 0)], [length]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    position: [pos1 * 1.7, pos1 * 1.7, 0]\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: true,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    scale: length,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    side: THREE.DoubleSide,\n    fog: false\n  })), /*#__PURE__*/React.createElement(Line, {\n    position: [-length / 2, -length / 2, 0],\n    transparent: true,\n    depthTest: depthTest,\n    points: points,\n    lineWidth: lineWidth,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    userData: userData,\n    fog: false\n  })));\n};\n\nexport { PlaneSlider };\n","import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\nimport { calculateScaleFactor } from '../../core/calculateScaleFactor.js';\n\nconst vec1 = /* @__PURE__ */new THREE.Vector3();\nconst vec2 = /* @__PURE__ */new THREE.Vector3();\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nconst upV = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst scaleV = /* @__PURE__ */new THREE.Vector3();\nconst scaleMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst ScalingSphere = ({\n  direction,\n  axis\n}) => {\n  const {\n    scaleLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n  const size = useThree(state => state.size);\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const meshRef = React.useRef(null);\n  const scale0 = React.useRef(1);\n  const scaleCur = React.useRef(1);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const position = fixed ? 1.2 : 1.2 * scale;\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${scaleCur.current.toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    const mPLG = objRef.current.matrixWorld.clone();\n    const mPLGInv = mPLG.clone().invert();\n    const offsetMultiplier = fixed ? 1 / calculateScaleFactor(objRef.current.getWorldPosition(vec1), scale, e.camera, size) : 1;\n    clickInfo.current = {\n      clickPoint,\n      dir,\n      mPLG,\n      mPLGInv,\n      offsetMultiplier\n    };\n    onDragStart({\n      component: 'Sphere',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore - setPointerCapture is not in the type definition\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, direction, onDragStart, axis, fixed, scale, size]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir,\n        mPLG,\n        mPLGInv,\n        offsetMultiplier\n      } = clickInfo.current;\n      const [min, max] = (scaleLimits == null ? void 0 : scaleLimits[axis]) || [1e-5, undefined]; // always limit the minimal value, since setting it very low might break the transform\n\n      const offsetW = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n      const offsetL = offsetW * offsetMultiplier;\n      const offsetH = fixed ? offsetL : offsetL / scale;\n      let upscale = Math.pow(2, offsetH * 0.2);\n\n      // @ts-ignore\n      if (e.shiftKey) {\n        upscale = Math.round(upscale * 10) / 10;\n      }\n      upscale = Math.max(upscale, min / scale0.current);\n      if (max !== undefined) {\n        upscale = Math.min(upscale, max / scale0.current);\n      }\n      scaleCur.current = scale0.current * upscale;\n      meshRef.current.position.set(0, position + offsetL, 0);\n      if (annotations) {\n        divRef.current.innerText = `${scaleCur.current.toFixed(2)}`;\n      }\n      scaleV.set(1, 1, 1);\n      scaleV.setComponent(axis, upscale);\n      scaleMatrix.makeScale(scaleV.x, scaleV.y, scaleV.z).premultiply(mPLG).multiply(mPLGInv);\n      onDrag(scaleMatrix);\n    }\n  }, [annotations, position, onDrag, isHovered, scaleLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    scale0.current = scaleCur.current;\n    clickInfo.current = null;\n    meshRef.current.position.set(0, position, 0);\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd, position]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    radius,\n    matrixL\n  } = React.useMemo(() => {\n    const radius = fixed ? lineWidth / scale * 1.8 : scale / 22.5;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      radius,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, position / 2, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: meshRef,\n    position: [0, position, 0],\n    renderOrder: 500,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"sphereGeometry\", {\n    args: [radius, 12, 12]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }))));\n};\n\nexport { ScalingSphere, calculateOffset };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { AxisArrow } from './AxisArrow.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { ScalingSphere } from './ScalingSphere.js';\nimport { context } from './context.js';\nimport { calculateScaleFactor } from '../../core/calculateScaleFactor.js';\n\nconst mL0 = /* @__PURE__ */new THREE.Matrix4();\nconst mW0 = /* @__PURE__ */new THREE.Matrix4();\nconst mP = /* @__PURE__ */new THREE.Matrix4();\nconst mPInv = /* @__PURE__ */new THREE.Matrix4();\nconst mW = /* @__PURE__ */new THREE.Matrix4();\nconst mL = /* @__PURE__ */new THREE.Matrix4();\nconst mL0Inv = /* @__PURE__ */new THREE.Matrix4();\nconst mdL = /* @__PURE__ */new THREE.Matrix4();\nconst mG = /* @__PURE__ */new THREE.Matrix4();\nconst bb = /* @__PURE__ */new THREE.Box3();\nconst bbObj = /* @__PURE__ */new THREE.Box3();\nconst vCenter = /* @__PURE__ */new THREE.Vector3();\nconst vSize = /* @__PURE__ */new THREE.Vector3();\nconst vAnchorOffset = /* @__PURE__ */new THREE.Vector3();\nconst vPosition = /* @__PURE__ */new THREE.Vector3();\nconst vScale = /* @__PURE__ */new THREE.Vector3();\nconst xDir = /* @__PURE__ */new THREE.Vector3(1, 0, 0);\nconst yDir = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst zDir = /* @__PURE__ */new THREE.Vector3(0, 0, 1);\nconst PivotControls = /* @__PURE__ */React.forwardRef(({\n  enabled = true,\n  matrix,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  autoTransform = true,\n  anchor,\n  disableAxes = false,\n  disableSliders = false,\n  disableRotations = false,\n  disableScaling = false,\n  activeAxes = [true, true, true],\n  offset = [0, 0, 0],\n  rotation = [0, 0, 0],\n  scale = 1,\n  lineWidth = 4,\n  fixed = false,\n  translationLimits,\n  rotationLimits,\n  scaleLimits,\n  depthTest = true,\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  hoveredColor = '#ffff40',\n  annotations = false,\n  annotationsClass,\n  opacity = 1,\n  visible = true,\n  userData,\n  children,\n  ...props\n}, fRef) => {\n  const invalidate = useThree(state => state.invalidate);\n  const parentRef = React.useRef(null);\n  const ref = React.useRef(null);\n  const gizmoRef = React.useRef(null);\n  const childrenRef = React.useRef(null);\n  const translation = React.useRef([0, 0, 0]);\n  const cameraScale = React.useRef(new THREE.Vector3(1, 1, 1));\n  const gizmoScale = React.useRef(new THREE.Vector3(1, 1, 1));\n  React.useLayoutEffect(() => {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(obj => {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(new THREE.Vector3(...anchor)).add(vCenter);\n    vPosition.set(...offset).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  const config = React.useMemo(() => ({\n    onDragStart: props => {\n      mL0.copy(ref.current.matrix);\n      mW0.copy(ref.current.matrixWorld);\n      onDragStart && onDragStart(props);\n      invalidate();\n    },\n    onDrag: mdW => {\n      mP.copy(parentRef.current.matrixWorld);\n      mPInv.copy(mP).invert();\n      // After applying the delta\n      mW.copy(mW0).premultiply(mdW);\n      mL.copy(mW).premultiply(mPInv);\n      mL0Inv.copy(mL0).invert();\n      mdL.copy(mL).multiply(mL0Inv);\n      if (autoTransform) {\n        ref.current.matrix.copy(mL);\n      }\n      onDrag && onDrag(mL, mdL, mW, mdW);\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (onDragEnd) onDragEnd();\n      invalidate();\n    },\n    translation,\n    translationLimits,\n    rotationLimits,\n    axisColors,\n    hoveredColor,\n    opacity,\n    scale,\n    lineWidth,\n    fixed,\n    depthTest,\n    userData,\n    annotations,\n    annotationsClass\n  }), [onDragStart, onDrag, onDragEnd, translation, translationLimits, rotationLimits, scaleLimits, depthTest, scale, lineWidth, fixed, ...axisColors, hoveredColor, opacity, userData, autoTransform, annotations, annotationsClass]);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (fixed) {\n      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n      cameraScale.current.setScalar(sf);\n    }\n    if (matrix && matrix instanceof THREE.Matrix4) {\n      ref.current.matrix = matrix;\n    }\n    // Update gizmo scale in accordance with matrix changes\n    // Without this, there might be noticable turbulences if scaling happens fast enough\n    ref.current.updateWorldMatrix(true, true);\n    mG.makeRotationFromEuler(gizmoRef.current.rotation).setPosition(gizmoRef.current.position).premultiply(ref.current.matrixWorld);\n    gizmoScale.current.setFromMatrixScale(mG);\n    vScale.copy(cameraScale.current).divide(gizmoScale.current);\n    if (Math.abs(gizmoRef.current.scale.x - vScale.x) > 1e-4 || Math.abs(gizmoRef.current.scale.y - vScale.y) > 1e-4 || Math.abs(gizmoRef.current.scale.z - vScale.z) > 1e-4) {\n      gizmoRef.current.scale.copy(vScale);\n      state.invalidate();\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, enabled && /*#__PURE__*/React.createElement(React.Fragment, null, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableScaling && activeAxes[0] && /*#__PURE__*/React.createElement(ScalingSphere, {\n    axis: 0,\n    direction: xDir\n  }), !disableScaling && activeAxes[1] && /*#__PURE__*/React.createElement(ScalingSphere, {\n    axis: 1,\n    direction: yDir\n  }), !disableScaling && activeAxes[2] && /*#__PURE__*/React.createElement(ScalingSphere, {\n    axis: 2,\n    direction: zDir\n  }))), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\n\nexport { PivotControls };\n","import { useFrame, useThree } from '@react-three/fiber';\nimport { ImageOverlayPlugin as ImageOverlayPluginImpl } from '3d-tiles-renderer/plugins';\nimport { TilesPlugin, TilesPluginContext, TilesRendererContext } from '3d-tiles-renderer/r3f';\nimport { forwardRef, useContext, useEffect, useMemo, useRef } from 'react';\n\nexport const ImageOverlayPlugin = forwardRef( function ImageOverlayPlugin( { children, ...rest }, ref ) {\n\n\tconst gl = useThree( state => state.gl );\n\treturn (\n\t\t<TilesPlugin plugin={ ImageOverlayPluginImpl } args={ { renderer: gl, ...rest } } ref={ ref }>\n\t\t\t{ children }\n\t\t</TilesPlugin>\n\t);\n\n} );\n\nexport const ImageOverlay = forwardRef( function ImageOverlay( props, ref ) {\n\n\tconst {\n\t\ttype,\n\t\torder = null,\n\t\topacity = 1,\n\t\tcolor = 0xffffff,\n\t\tworldFrame = null,\n\t\t...rest\n\t} = props;\n\n\tconst plugin = useContext( TilesPluginContext );\n\tconst tiles = useContext( TilesRendererContext );\n\tconst overlay = useMemo( () => {\n\n\t\treturn new type( rest );\n\n\t}, [ type, useObjectDep( rest ) ] ); // eslint-disable-line\n\n\tuseEffect( () => {\n\n\t\tplugin.addOverlay( overlay, order );\n\n\t\treturn () => {\n\n\t\t\tplugin.deleteOverlay( overlay );\n\n\t\t};\n\n\t}, [ overlay, plugin ] ); // eslint-disable-line\n\n\tuseEffect( () => {\n\n\t\tplugin.setOverlayOrder( overlay, order );\n\n\t}, [ overlay, plugin, order ] );\n\n\tuseEffect( () => {\n\n\t\toverlay.opacity = opacity;\n\t\toverlay.color.set( color );\n\t\tif ( worldFrame && ! overlay.frame ) {\n\n\t\t\toverlay.frame = worldFrame.clone();\n\n\t\t} else if ( ! worldFrame && overlay.frame ) {\n\n\t\t\toverlay.frame = null;\n\n\t\t}\n\n\t}, [ overlay, opacity, color, worldFrame ] );\n\n\tuseFrame( () => {\n\n\t\tif ( worldFrame && tiles ) {\n\n\t\t\toverlay.frame.copy( worldFrame ).premultiply( tiles.group.matrixWorldInverse );\n\n\t\t}\n\n\t} );\n\n\tuseApplyRefs( overlay, ref );\n\n} );\n\nfunction useApplyRefs( target, ...refs ) {\n\n\tuseEffect( () => {\n\n\t\trefs.forEach( ref => {\n\n\t\t\tif ( ref ) {\n\n\t\t\t\tif ( ref instanceof Function ) {\n\n\t\t\t\t\tref( target );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tref.current = target;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}, [ target, ...refs ] ); // eslint-disable-line\n\n}\n\n// checks if the first level of object key-values are equal\nfunction areObjectsEqual( a, b ) {\n\n\t// early check for equivalence\n\tif ( a === b ) {\n\n\t\treturn true;\n\n\t}\n\n\t// if either of the objects is null or undefined, then perform a simple check\n\tif ( ! a || ! b ) {\n\n\t\treturn a === b;\n\n\t}\n\n\t// check all keys and values in the first object\n\tfor ( const key in a ) {\n\n\t\tif ( a[ key ] !== b[ key ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\t// check all keys and values in the second object\n\tfor ( const key in b ) {\n\n\t\tif ( a[ key ] !== b[ key ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\n// Helper for using an object as a dependency in a useEffect or useMemo array\nfunction useObjectDep( object ) {\n\n\t// only modify the returned object reference if it has changed\n\tconst ref = useRef();\n\tif ( ! areObjectsEqual( ref.current, object ) ) {\n\n\t\tref.current = object;\n\n\t}\n\n\treturn ref.current;\n\n}\n","import {\n\tBox3,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from 'three';\n\nconst _box = new Box3();\nconst _vector = new Vector3();\n\nclass LineSegmentsGeometry extends InstancedBufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isLineSegmentsGeometry = true;\n\n\t\tthis.type = 'LineSegmentsGeometry';\n\n\t\tconst positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\t\tconst uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\t\tconst index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\t\tthis.setIndex( index );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\n\t\t\tend.applyMatrix4( matrix );\n\n\t\t\tstart.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetPositions( array ) {\n\n\t\tlet lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tconst instanceBuffer = new InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.setAttribute( 'instanceStart', new InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.setAttribute( 'instanceEnd', new InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\tthis.instanceCount = this.attributes.instanceStart.count;\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t}\n\n\tsetColors( array ) {\n\n\t\tlet colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tconst instanceColorBuffer = new InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.setAttribute( 'instanceColorStart', new InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.setAttribute( 'instanceColorEnd', new InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t}\n\n\tfromWireframeGeometry( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t}\n\n\tfromEdgesGeometry( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t}\n\n\tfromMesh( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t}\n\n\tfromLineSegments( lineSegments ) {\n\n\t\tconst geometry = lineSegments.geometry;\n\n\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t_box.setFromBufferAttribute( end );\n\n\t\t\tthis.boundingBox.union( _box );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( start, i );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t\t_vector.fromBufferAttribute( end, i );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\t// todo\n\n\t}\n\n\tapplyMatrix( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n}\n\nexport { LineSegmentsGeometry };\n","import {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2,\n} from 'three';\n\nUniformsLib.line = {\n\n\tworldUnits: { value: 1 },\n\tlinewidth: { value: 1 },\n\tresolution: { value: new Vector2( 1, 1 ) },\n\tdashOffset: { value: 0 },\n\tdashScale: { value: 1 },\n\tdashSize: { value: 1 },\n\tgapSize: { value: 1 } // todo FIX - maybe change to totalSize\n\n};\n\nShaderLib[ 'line' ] = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tUniformsLib.common,\n\t\tUniformsLib.fog,\n\t\tUniformsLib.line\n\t] ),\n\n\tvertexShader:\n\t/* glsl */`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\tworldStart = start.xyz;\n\t\t\t\tworldEnd = end.xyz;\n\n\t\t\t#else\n\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\tvec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );\n\t\t\t\tvec3 worldUp = normalize( cross( worldDir, tmpFwd ) );\n\t\t\t\tvec3 worldFwd = cross( worldDir, worldUp );\n\t\t\t\tworldPos = position.y < 0.5 ? start: end;\n\n\t\t\t\t// height offset\n\t\t\t\tfloat hw = linewidth * 0.5;\n\t\t\t\tworldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;\n\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t// cap extension\n\t\t\t\t\tworldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;\n\n\t\t\t\t\t// add width to the box\n\t\t\t\t\tworldPos.xyz += worldFwd * hw;\n\n\t\t\t\t\t// endcaps\n\t\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\t\tworldPos.xyz -= worldFwd * 2.0 * hw;\n\n\t\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t\t// project the worldpos\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segments overlap neatly\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t#else\n\n\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\tdir.x /= aspect;\n\t\t\t\toffset.x /= aspect;\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\t\toffset += - dir;\n\n\t\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\t\toffset += dir;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth;\n\n\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\toffset /= resolution.y;\n\n\t\t\t\t// select end\n\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t\t// back to clip space\n\t\t\t\toffset *= clip.w;\n\n\t\t\t\tclip.xy += offset;\n\n\t\t\t#endif\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\n\tfragmentShader:\n\t/* glsl */`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float linewidth;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\tfloat mua;\n\t\t\tfloat mub;\n\n\t\t\tvec3 p13 = p1 - p3;\n\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\tmua = numer / denom;\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\treturn vec2( mua, mub );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tfloat alpha = opacity;\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\tfloat len = length( delta );\n\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#endif\n\n\t\t\t#else\n\n\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t`\n};\n\nclass LineMaterial extends ShaderMaterial {\n\n\n\tstatic get type() {\n\n\t\treturn 'LineMaterial';\n\n\t}\n\n\tconstructor( parameters ) {\n\n\t\tsuper( {\n\n\t\t\tuniforms: UniformsUtils.clone( ShaderLib[ 'line' ].uniforms ),\n\n\t\t\tvertexShader: ShaderLib[ 'line' ].vertexShader,\n\t\t\tfragmentShader: ShaderLib[ 'line' ].fragmentShader,\n\n\t\t\tclipping: true // required for clipping support\n\n\t\t} );\n\n\t\tthis.isLineMaterial = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget color() {\n\n\t\treturn this.uniforms.diffuse.value;\n\n\t}\n\n\tset color( value ) {\n\n\t\tthis.uniforms.diffuse.value = value;\n\n\t}\n\n\tget worldUnits() {\n\n\t\treturn 'WORLD_UNITS' in this.defines;\n\n\t}\n\n\tset worldUnits( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.defines.WORLD_UNITS = '';\n\n\t\t} else {\n\n\t\t\tdelete this.defines.WORLD_UNITS;\n\n\t\t}\n\n\t}\n\n\tget linewidth() {\n\n\t\treturn this.uniforms.linewidth.value;\n\n\t}\n\n\tset linewidth( value ) {\n\n\t\tif ( ! this.uniforms.linewidth ) return;\n\t\tthis.uniforms.linewidth.value = value;\n\n\t}\n\n\tget dashed() {\n\n\t\treturn 'USE_DASH' in this.defines;\n\n\t}\n\n\tset dashed( value ) {\n\n\t\tif ( ( value === true ) !== this.dashed ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.defines.USE_DASH = '';\n\n\t\t} else {\n\n\t\t\tdelete this.defines.USE_DASH;\n\n\t\t}\n\n\t}\n\n\tget dashScale() {\n\n\t\treturn this.uniforms.dashScale.value;\n\n\t}\n\n\tset dashScale( value ) {\n\n\t\tthis.uniforms.dashScale.value = value;\n\n\t}\n\n\tget dashSize() {\n\n\t\treturn this.uniforms.dashSize.value;\n\n\t}\n\n\tset dashSize( value ) {\n\n\t\tthis.uniforms.dashSize.value = value;\n\n\t}\n\n\tget dashOffset() {\n\n\t\treturn this.uniforms.dashOffset.value;\n\n\t}\n\n\tset dashOffset( value ) {\n\n\t\tthis.uniforms.dashOffset.value = value;\n\n\t}\n\n\tget gapSize() {\n\n\t\treturn this.uniforms.gapSize.value;\n\n\t}\n\n\tset gapSize( value ) {\n\n\t\tthis.uniforms.gapSize.value = value;\n\n\t}\n\n\tget opacity() {\n\n\t\treturn this.uniforms.opacity.value;\n\n\t}\n\n\tset opacity( value ) {\n\n\t\tif ( ! this.uniforms ) return;\n\t\tthis.uniforms.opacity.value = value;\n\n\t}\n\n\tget resolution() {\n\n\t\treturn this.uniforms.resolution.value;\n\n\t}\n\n\tset resolution( value ) {\n\n\t\tthis.uniforms.resolution.value.copy( value );\n\n\t}\n\n\tget alphaToCoverage() {\n\n\t\treturn 'USE_ALPHA_TO_COVERAGE' in this.defines;\n\n\t}\n\n\tset alphaToCoverage( value ) {\n\n\t\tif ( ! this.defines ) return;\n\n\t\tif ( ( value === true ) !== this.alphaToCoverage ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.defines.USE_ALPHA_TO_COVERAGE = '';\n\n\t\t} else {\n\n\t\t\tdelete this.defines.USE_ALPHA_TO_COVERAGE;\n\n\t\t}\n\n\t}\n\n}\n\nexport { LineMaterial };\n","import {\n\tBox3,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tLine3,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tSphere,\n\tVector3,\n\tVector4\n} from 'three';\nimport { LineSegmentsGeometry } from '../lines/LineSegmentsGeometry.js';\nimport { LineMaterial } from '../lines/LineMaterial.js';\n\nconst _viewport = new Vector4();\n\nconst _start = new Vector3();\nconst _end = new Vector3();\n\nconst _start4 = new Vector4();\nconst _end4 = new Vector4();\n\nconst _ssOrigin = new Vector4();\nconst _ssOrigin3 = new Vector3();\nconst _mvMatrix = new Matrix4();\nconst _line = new Line3();\nconst _closestPoint = new Vector3();\n\nconst _box = new Box3();\nconst _sphere = new Sphere();\nconst _clipToWorldVector = new Vector4();\n\nlet _ray, _lineWidth;\n\n// Returns the margin required to expand by in world space given the distance from the camera,\n// line width, resolution, and camera projection\nfunction getWorldSpaceHalfWidth( camera, distance, resolution ) {\n\n\t// transform into clip space, adjust the x and y values by the pixel width offset, then\n\t// transform back into world space to get world offset. Note clip space is [-1, 1] so full\n\t// width does not need to be halved.\n\t_clipToWorldVector.set( 0, 0, - distance, 1.0 ).applyMatrix4( camera.projectionMatrix );\n\t_clipToWorldVector.multiplyScalar( 1.0 / _clipToWorldVector.w );\n\t_clipToWorldVector.x = _lineWidth / resolution.width;\n\t_clipToWorldVector.y = _lineWidth / resolution.height;\n\t_clipToWorldVector.applyMatrix4( camera.projectionMatrixInverse );\n\t_clipToWorldVector.multiplyScalar( 1.0 / _clipToWorldVector.w );\n\n\treturn Math.abs( Math.max( _clipToWorldVector.x, _clipToWorldVector.y ) );\n\n}\n\nfunction raycastWorldUnits( lineSegments, intersects ) {\n\n\tconst matrixWorld = lineSegments.matrixWorld;\n\tconst geometry = lineSegments.geometry;\n\tconst instanceStart = geometry.attributes.instanceStart;\n\tconst instanceEnd = geometry.attributes.instanceEnd;\n\tconst segmentCount = Math.min( geometry.instanceCount, instanceStart.count );\n\n\tfor ( let i = 0, l = segmentCount; i < l; i ++ ) {\n\n\t\t_line.start.fromBufferAttribute( instanceStart, i );\n\t\t_line.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t_line.applyMatrix4( matrixWorld );\n\n\t\tconst pointOnLine = new Vector3();\n\t\tconst point = new Vector3();\n\n\t\t_ray.distanceSqToSegment( _line.start, _line.end, point, pointOnLine );\n\t\tconst isInside = point.distanceTo( pointOnLine ) < _lineWidth * 0.5;\n\n\t\tif ( isInside ) {\n\n\t\t\tintersects.push( {\n\t\t\t\tpoint,\n\t\t\t\tpointOnLine,\n\t\t\t\tdistance: _ray.origin.distanceTo( point ),\n\t\t\t\tobject: lineSegments,\n\t\t\t\tface: null,\n\t\t\t\tfaceIndex: i,\n\t\t\t\tuv: null,\n\t\t\t\tuv1: null,\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n}\n\nfunction raycastScreenSpace( lineSegments, camera, intersects ) {\n\n\tconst projectionMatrix = camera.projectionMatrix;\n\tconst material = lineSegments.material;\n\tconst resolution = material.resolution;\n\tconst matrixWorld = lineSegments.matrixWorld;\n\n\tconst geometry = lineSegments.geometry;\n\tconst instanceStart = geometry.attributes.instanceStart;\n\tconst instanceEnd = geometry.attributes.instanceEnd;\n\tconst segmentCount = Math.min( geometry.instanceCount, instanceStart.count );\n\n\tconst near = - camera.near;\n\n\t//\n\n\t// pick a point 1 unit out along the ray to avoid the ray origin\n\t// sitting at the camera origin which will cause \"w\" to be 0 when\n\t// applying the projection matrix.\n\t_ray.at( 1, _ssOrigin );\n\n\t// ndc space [ - 1.0, 1.0 ]\n\t_ssOrigin.w = 1;\n\t_ssOrigin.applyMatrix4( camera.matrixWorldInverse );\n\t_ssOrigin.applyMatrix4( projectionMatrix );\n\t_ssOrigin.multiplyScalar( 1 / _ssOrigin.w );\n\n\t// screen space\n\t_ssOrigin.x *= resolution.x / 2;\n\t_ssOrigin.y *= resolution.y / 2;\n\t_ssOrigin.z = 0;\n\n\t_ssOrigin3.copy( _ssOrigin );\n\n\t_mvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\n\n\tfor ( let i = 0, l = segmentCount; i < l; i ++ ) {\n\n\t\t_start4.fromBufferAttribute( instanceStart, i );\n\t\t_end4.fromBufferAttribute( instanceEnd, i );\n\n\t\t_start4.w = 1;\n\t\t_end4.w = 1;\n\n\t\t// camera space\n\t\t_start4.applyMatrix4( _mvMatrix );\n\t\t_end4.applyMatrix4( _mvMatrix );\n\n\t\t// skip the segment if it's entirely behind the camera\n\t\tconst isBehindCameraNear = _start4.z > near && _end4.z > near;\n\t\tif ( isBehindCameraNear ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\t// trim the segment if it extends behind camera near\n\t\tif ( _start4.z > near ) {\n\n\t\t\tconst deltaDist = _start4.z - _end4.z;\n\t\t\tconst t = ( _start4.z - near ) / deltaDist;\n\t\t\t_start4.lerp( _end4, t );\n\n\t\t} else if ( _end4.z > near ) {\n\n\t\t\tconst deltaDist = _end4.z - _start4.z;\n\t\t\tconst t = ( _end4.z - near ) / deltaDist;\n\t\t\t_end4.lerp( _start4, t );\n\n\t\t}\n\n\t\t// clip space\n\t\t_start4.applyMatrix4( projectionMatrix );\n\t\t_end4.applyMatrix4( projectionMatrix );\n\n\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t_start4.multiplyScalar( 1 / _start4.w );\n\t\t_end4.multiplyScalar( 1 / _end4.w );\n\n\t\t// screen space\n\t\t_start4.x *= resolution.x / 2;\n\t\t_start4.y *= resolution.y / 2;\n\n\t\t_end4.x *= resolution.x / 2;\n\t\t_end4.y *= resolution.y / 2;\n\n\t\t// create 2d segment\n\t\t_line.start.copy( _start4 );\n\t\t_line.start.z = 0;\n\n\t\t_line.end.copy( _end4 );\n\t\t_line.end.z = 0;\n\n\t\t// get closest point on ray to segment\n\t\tconst param = _line.closestPointToPointParameter( _ssOrigin3, true );\n\t\t_line.at( param, _closestPoint );\n\n\t\t// check if the intersection point is within clip space\n\t\tconst zPos = MathUtils.lerp( _start4.z, _end4.z, param );\n\t\tconst isInClipSpace = zPos >= - 1 && zPos <= 1;\n\n\t\tconst isInside = _ssOrigin3.distanceTo( _closestPoint ) < _lineWidth * 0.5;\n\n\t\tif ( isInClipSpace && isInside ) {\n\n\t\t\t_line.start.fromBufferAttribute( instanceStart, i );\n\t\t\t_line.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t_line.start.applyMatrix4( matrixWorld );\n\t\t\t_line.end.applyMatrix4( matrixWorld );\n\n\t\t\tconst pointOnLine = new Vector3();\n\t\t\tconst point = new Vector3();\n\n\t\t\t_ray.distanceSqToSegment( _line.start, _line.end, point, pointOnLine );\n\n\t\t\tintersects.push( {\n\t\t\t\tpoint: point,\n\t\t\t\tpointOnLine: pointOnLine,\n\t\t\t\tdistance: _ray.origin.distanceTo( point ),\n\t\t\t\tobject: lineSegments,\n\t\t\t\tface: null,\n\t\t\t\tfaceIndex: i,\n\t\t\t\tuv: null,\n\t\t\t\tuv1: null,\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n}\n\nclass LineSegments2 extends Mesh {\n\n\tconstructor( geometry = new LineSegmentsGeometry(), material = new LineMaterial( { color: Math.random() * 0xffffff } ) ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments2 = true;\n\n\t\tthis.type = 'LineSegments2';\n\n\t}\n\n\t// for backwards-compatibility, but could be a method of LineSegmentsGeometry...\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst instanceStart = geometry.attributes.instanceStart;\n\t\tconst instanceEnd = geometry.attributes.instanceEnd;\n\t\tconst lineDistances = new Float32Array( 2 * instanceStart.count );\n\n\t\tfor ( let i = 0, j = 0, l = instanceStart.count; i < l; i ++, j += 2 ) {\n\n\t\t\t_start.fromBufferAttribute( instanceStart, i );\n\t\t\t_end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + _start.distanceTo( _end );\n\n\t\t}\n\n\t\tconst instanceDistanceBuffer = new InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\tgeometry.setAttribute( 'instanceDistanceStart', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\tgeometry.setAttribute( 'instanceDistanceEnd', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst worldUnits = this.material.worldUnits;\n\t\tconst camera = raycaster.camera;\n\n\t\tif ( camera === null && ! worldUnits ) {\n\n\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.' );\n\n\t\t}\n\n\t\tconst threshold = ( raycaster.params.Line2 !== undefined ) ? raycaster.params.Line2.threshold || 0 : 0;\n\n\t\t_ray = raycaster.ray;\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\t_lineWidth = material.linewidth + threshold;\n\n\t\t// check if we intersect the sphere bounds\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( matrixWorld );\n\n\t\t// increase the sphere bounds by the worst case line screen space width\n\t\tlet sphereMargin;\n\t\tif ( worldUnits ) {\n\n\t\t\tsphereMargin = _lineWidth * 0.5;\n\n\t\t} else {\n\n\t\t\tconst distanceToSphere = Math.max( camera.near, _sphere.distanceToPoint( _ray.origin ) );\n\t\t\tsphereMargin = getWorldSpaceHalfWidth( camera, distanceToSphere, material.resolution );\n\n\t\t}\n\n\t\t_sphere.radius += sphereMargin;\n\n\t\tif ( _ray.intersectsSphere( _sphere ) === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// check if we intersect the box bounds\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\t_box.copy( geometry.boundingBox ).applyMatrix4( matrixWorld );\n\n\t\t// increase the box bounds by the worst case line width\n\t\tlet boxMargin;\n\t\tif ( worldUnits ) {\n\n\t\t\tboxMargin = _lineWidth * 0.5;\n\n\t\t} else {\n\n\t\t\tconst distanceToBox = Math.max( camera.near, _box.distanceToPoint( _ray.origin ) );\n\t\t\tboxMargin = getWorldSpaceHalfWidth( camera, distanceToBox, material.resolution );\n\n\t\t}\n\n\t\t_box.expandByScalar( boxMargin );\n\n\t\tif ( _ray.intersectsBox( _box ) === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( worldUnits ) {\n\n\t\t\traycastWorldUnits( this, intersects );\n\n\t\t} else {\n\n\t\t\traycastScreenSpace( this, camera, intersects );\n\n\t\t}\n\n\t}\n\n\tonBeforeRender( renderer ) {\n\n\t\tconst uniforms = this.material.uniforms;\n\n\t\tif ( uniforms && uniforms.resolution ) {\n\n\t\t\trenderer.getViewport( _viewport );\n\t\t\tthis.material.uniforms.resolution.value.set( _viewport.z, _viewport.w );\n\n\t\t}\n\n\t}\n\n}\n\nexport { LineSegments2 };\n","import { StrictMode, useEffect, useMemo, useState } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { TilesPlugin, TilesRenderer, EnvironmentControls } from '3d-tiles-renderer/r3f';\nimport { TilesFadePlugin, CesiumIonOverlay, EnforceNonZeroErrorPlugin } from '3d-tiles-renderer/plugins';\nimport { BoxGeometry, EdgesGeometry, Euler, Matrix4, Quaternion, Vector3 } from 'three';\nimport { PivotControls } from '@react-three/drei';\nimport { ImageOverlay, ImageOverlayPlugin } from './plugins/ImageOverlayPlugin.jsx';\nimport { LineSegments2 } from 'three/examples/jsm/lines/LineSegments2.js';\nimport { LineSegmentsGeometry } from 'three/examples/jsm/lines/LineSegmentsGeometry.js';\n\nconst tilesetUrl = 'https://raw.githubusercontent.com/NASA-AMMOS/3DTilesSampleData/master/msl-dingo-gap/0528_0260184_to_s64o256_colorize/0528_0260184_to_s64o256_colorize/0528_0260184_to_s64o256_colorize_tileset.json';\n\nfunction Scene() {\n\n\tconst [ transformRoot, setTransformRoot ] = useState( null );\n\tconst [ overlay, setOverlay ] = useState( null );\n\n\tconst worldMatrix = useMemo( () => {\n\n\t\tconst scale = new Vector3().set( 40, 40, 20 );\n\t\tconst position = new Vector3( - scale.x, 10, scale.y * 0.25 );\n\t\tconst rotation = new Euler( - Math.PI / 2 );\n\t\tconst quaternion = new Quaternion().setFromEuler( rotation );\n\t\treturn new Matrix4().compose( position, quaternion, scale );\n\n\t}, [] );\n\n\tconst boxMesh = useMemo( () => {\n\n\t\tconst boxGeometry = new BoxGeometry();\n\t\tconst edgesGeometry = new EdgesGeometry( boxGeometry );\n\t\tconst linesGeometry = new LineSegmentsGeometry().fromEdgesGeometry( edgesGeometry );\n\t\tconst lines = new LineSegments2( linesGeometry );\n\t\tlines.material.color.set( 0xffff00 );\n\t\tlines.material.linewidth = 2;\n\t\treturn lines;\n\n\t}, [] );\n\n\tuseEffect( () => {\n\n\t\treturn () => {\n\n\t\t\tboxMesh.geometry.dispose();\n\t\t\tboxMesh.material.dispose();\n\n\t\t};\n\n\t}, [ boxMesh ] );\n\n\tuseFrame( () => {\n\n\t\tif ( overlay && boxMesh ) {\n\n\t\t\tboxMesh.scale.x = overlay.aspectRatio;\n\t\t\tboxMesh.position.x = overlay.aspectRatio / 2;\n\n\t\t}\n\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<color attach=\"background\" args={ [ 0x222222 ] } />\n\n\t\t\t{/* 3D Tiles renderer tileset */}\n\t\t\t<group rotation-x={ Math.PI / 2 }>\n\t\t\t\t<TilesRenderer url={ tilesetUrl }>\n\t\t\t\t\t<TilesPlugin plugin={ TilesFadePlugin } fadeDuration={ 500 } />\n\t\t\t\t\t<ImageOverlayPlugin>\n\t\t\t\t\t\t<ImageOverlay\n\t\t\t\t\t\t\ttype={ CesiumIonOverlay }\n\t\t\t\t\t\t\tassetId='3954'\n\t\t\t\t\t\t\tapiToken={ import.meta.env.VITE_ION_KEY }\n\t\t\t\t\t\t\tworldFrame={ transformRoot ? transformRoot.matrixWorld : null }\n\t\t\t\t\t\t\tref={ setOverlay }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ImageOverlayPlugin>\n\t\t\t\t\t<TilesPlugin plugin={ EnforceNonZeroErrorPlugin } />\n\t\t\t\t</TilesRenderer>\n\t\t\t</group>\n\n\t\t\t{/* Controls */}\n\t\t\t<EnvironmentControls enableDamping={ true } maxDistance={ 1000 } minDistance={ 1 } cameraRadius={ 0 } />\n\t\t\t<PivotControls scale={ 150 } matrix={ worldMatrix } fixed>\n\t\t\t\t<group ref={ setTransformRoot } position-z={ - 1 }>\n\t\t\t\t\t<primitive object={ boxMesh } position={ [ 0.5, 0.5, 0.5 ] } />\n\t\t\t\t</group>\n\t\t\t</PivotControls>\n\t\t</>\n\t);\n\n}\n\nfunction App() {\n\n\treturn (\n\t\t<Canvas\n\t\t\tframeloop='demand'\n\t\t\tcamera={ {\n\t\t\t\tposition: [ 0, 40, 35 ],\n\t\t\t} }\n\t\t\tstyle={ {\n\t\t\t\twidth: '100%',\n\t\t\t\theight: '100%',\n\t\t\t\tposition: 'absolute',\n\t\t\t\tmargin: 0,\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t} }\n\t\t\tonContextMenu={ e => {\n\n\t\t\t\t// disable the context menu click for pivot controls\n\t\t\t\te.preventDefault();\n\n\t\t\t} }\n\t\t>\n\t\t\t<Scene />\n\t\t</Canvas>\n\t);\n\n}\n\ncreateRoot( document.getElementById( 'root' ) ).render(\n\t<StrictMode>\n\t\t<App />\n\t</StrictMode>,\n);\n\n"],"names":["EnforceNonZeroErrorPlugin","tile","parent","depth","targetDepth","targetError","UV1","version","_box","Box3","_vector","Vector3","InstancedBufferGeometry","positions","uvs","index","Float32BufferAttribute","matrix","start","end","array","lineSegments","instanceBuffer","InstancedInterleavedBuffer","InterleavedBufferAttribute","itemSize","colors","instanceColorBuffer","geometry","mesh","WireframeGeometry","Sphere","center","maxRadiusSq","i","il","LineGeometry","LineSegmentsGeometry","length","points","line","ShaderMaterial","parameters","UniformsUtils","UniformsLib","Vector2","value","_viewport","Vector4","_start","_end","_start4","_end4","_ssOrigin","_ssOrigin3","_mvMatrix","Matrix4","_line","Line3","_closestPoint","_sphere","_clipToWorldVector","_ray","_lineWidth","getWorldSpaceHalfWidth","camera","distance","resolution","raycastWorldUnits","intersects","matrixWorld","instanceStart","instanceEnd","segmentCount","l","pointOnLine","point","raycastScreenSpace","projectionMatrix","near","deltaDist","t","param","zPos","MathUtils","isInClipSpace","isInside","Mesh","material","LineMaterial","lineDistances","j","instanceDistanceBuffer","raycaster","worldUnits","threshold","sphereMargin","distanceToSphere","boxMargin","distanceToBox","renderer","uniforms","Line2","LineSegments2","v1","v2","v3","v4","defaultCalculatePosition","el","size","objectPos","widthHalf","heightHalf","isObjectBehindCamera","cameraPos","deltaCamObj","camDir","isObjectVisible","occlude","elPos","screenPos","intersectionDistance","objectScale","OrthographicCamera","PerspectiveCamera","vFOV","dist","objectZIndex","zIndexRange","A","B","epsilon","getCSSMatrix","multipliers","prepend","matrix3d","getCameraCSSMatrix","getObjectCSSMatrix","scaleMultipliers","factor","f","isRefObject","ref","Html","React.forwardRef","children","eps","style","className","fullscreen","portal","distanceFactor","sprite","transform","onOcclude","castShadow","receiveShadow","calculatePosition","as","wrapperClass","pointerEvents","props","gl","scene","events","viewport","useThree","React.useState","root","React.useRef","group","oldZoom","oldPosition","transformOuterRef","transformInnerRef","target","occlusionMeshRef","isMeshSizeSet","isRayCastOcclusion","React.useMemo","React.useLayoutEffect","currentRoot","ReactDOM.createRoot","vec","styles","transformInnerStyles","_root$current","React.createElement","_root$current2","visible","useFrame","isBehindCamera","raytraceTarget","item","previouslyVisible","isvisible","halfRange","zRange","fov","isOrthographicCamera","top","left","bottom","right","cameraMatrix","cameraTransform","scale","ratio","w","h","ele","shaders","_extends","DoubleSide","tV0","THREE.Vector3","tV1","tV2","getPoint2","point3","vector","getPoint3","point2","zValue","calculateScaleFactor","radiusPx","point2off","point3off","Line","color","vertexColors","linewidth","lineWidth","segments","dashed","rest","_vertexColors$","_ref","state","line2","lineMaterial","lineGeom","geom","pValues","p","isArray","cValues","c","Color","React.useEffect","context","React.createContext","vec1","vec2","calculateOffset","clickPoint","normal","rayStart","rayDir","e1","e2","e3","upV","offsetMatrix","THREE.Matrix4","AxisArrow","direction","axis","translation","translationLimits","annotations","annotationsClass","depthTest","fixed","axisColors","hoveredColor","opacity","onDragStart","onDrag","onDragEnd","userData","React.useContext","camControls","divRef","objRef","clickInfo","offset0","isHovered","setIsHovered","onPointerDown","React.useCallback","e","rotation","origin","dir","onPointerMove","min","max","offset","onPointerUp","onPointerOut","cylinderLength","coneWidth","coneLength","matrixL","quaternion","THREE.Quaternion","color_","THREE.DoubleSide","clickDir","intersectionDir","toDegrees","radians","toRadians","degrees","calculateAngle","intersectionPoint","dote1e1","dote2e2","uClick","vClick","uIntersection","vIntersection","angleClick","fmod","num","denom","k","minimizeAngle","angle","result","rotMatrix","posNew","ray","THREE.Ray","intersection","AxisRotator","dir1","dir2","rotationLimits","angle0","plane","THREE.Plane","deltaAngle","THREE.MathUtils","dir1N","dir2N","r","arc","decomposeIntoBasis","i1","e2DegrowthOrder","a","b","i2","a1","a2","b1","b2","c1","y","PlaneSlider","offsetX0","offsetY0","minX","maxX","minY","maxY","offsetX","offsetY","pos1","scaleV","scaleMatrix","ScalingSphere","scaleLimits","meshRef","scale0","scaleCur","position","mPLG","mPLGInv","offsetMultiplier","offsetL","offsetH","upscale","radius","mL0","mW0","mP","mPInv","mW","mL","mL0Inv","mdL","mG","bb","THREE.Box3","bbObj","vCenter","vSize","vAnchorOffset","vPosition","vScale","xDir","yDir","zDir","PivotControls","enabled","autoTransform","anchor","disableAxes","disableSliders","disableRotations","disableScaling","activeAxes","fRef","invalidate","parentRef","gizmoRef","childrenRef","cameraScale","gizmoScale","obj","config","mdW","sf","React.useImperativeHandle","React.Fragment","ImageOverlayPlugin","forwardRef","jsx","TilesPlugin","ImageOverlayPluginImpl","ImageOverlay","type","order","worldFrame","plugin","useContext","TilesPluginContext","tiles","TilesRendererContext","overlay","useMemo","useObjectDep","useEffect","useApplyRefs","refs","areObjectsEqual","key","object","useRef","ShaderLib","tilesetUrl","Scene","transformRoot","setTransformRoot","useState","setOverlay","worldMatrix","Euler","Quaternion","boxMesh","boxGeometry","BoxGeometry","edgesGeometry","EdgesGeometry","linesGeometry","lines","jsxs","Fragment","TilesRenderer","TilesFadePlugin","CesiumIonOverlay","EnvironmentControls","App","Canvas","createRoot","StrictMode"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19]}