{"version":3,"file":"B3DMLoader-BZtrZCNg.js","sources":["../../../src/core/renderer/loaders/B3DMLoaderBase.js","../../../src/three/renderer/loaders/B3DMLoader.js"],"sourcesContent":["// B3DM File Format\n// https://github.com/CesiumGS/3d-tiles/blob/master/specification/TileFormats/Batched3DModel/README.md\n\nimport { BatchTable } from '../utilities/BatchTable.js';\nimport { FeatureTable } from '../utilities/FeatureTable.js';\nimport { LoaderBase } from './LoaderBase.js';\nimport { readMagicBytes } from '../utilities/readMagicBytes.js';\n\nexport class B3DMLoaderBase extends LoaderBase {\n\n\tparse( buffer ) {\n\n\t\t// TODO: this should be able to take a uint8array with an offset and length\n\t\tconst dataView = new DataView( buffer );\n\n\t\t// 28-byte header\n\n\t\t// 4 bytes\n\t\tconst magic = readMagicBytes( dataView );\n\n\t\tconsole.assert( magic === 'b3dm' );\n\n\t\t// 4 bytes\n\t\tconst version = dataView.getUint32( 4, true );\n\n\t\tconsole.assert( version === 1 );\n\n\t\t// 4 bytes\n\t\tconst byteLength = dataView.getUint32( 8, true );\n\n\t\tconsole.assert( byteLength === buffer.byteLength );\n\n\t\t// 4 bytes\n\t\tconst featureTableJSONByteLength = dataView.getUint32( 12, true );\n\n\t\t// 4 bytes\n\t\tconst featureTableBinaryByteLength = dataView.getUint32( 16, true );\n\n\t\t// 4 bytes\n\t\tconst batchTableJSONByteLength = dataView.getUint32( 20, true );\n\n\t\t// 4 bytes\n\t\tconst batchTableBinaryByteLength = dataView.getUint32( 24, true );\n\n\t\t// Feature Table\n\t\tconst featureTableStart = 28;\n\t\tconst featureTableBuffer = buffer.slice(\n\t\t\tfeatureTableStart,\n\t\t\tfeatureTableStart + featureTableJSONByteLength + featureTableBinaryByteLength,\n\t\t);\n\t\tconst featureTable = new FeatureTable(\n\t\t\tfeatureTableBuffer,\n\t\t\t0,\n\t\t\tfeatureTableJSONByteLength,\n\t\t\tfeatureTableBinaryByteLength,\n\t\t);\n\n\t\t// Batch Table\n\t\tconst batchTableStart = featureTableStart + featureTableJSONByteLength + featureTableBinaryByteLength;\n\t\tconst batchTableBuffer = buffer.slice(\n\t\t\tbatchTableStart,\n\t\t\tbatchTableStart + batchTableJSONByteLength + batchTableBinaryByteLength,\n\t\t);\n\t\tconst batchTable = new BatchTable(\n\t\t\tbatchTableBuffer,\n\t\t\tfeatureTable.getData( 'BATCH_LENGTH' ),\n\t\t\t0,\n\t\t\tbatchTableJSONByteLength,\n\t\t\tbatchTableBinaryByteLength,\n\t\t);\n\n\t\tconst glbStart = batchTableStart + batchTableJSONByteLength + batchTableBinaryByteLength;\n\t\tconst glbBytes = new Uint8Array( buffer, glbStart, byteLength - glbStart );\n\n\t\treturn {\n\t\t\tversion,\n\t\t\tfeatureTable,\n\t\t\tbatchTable,\n\t\t\tglbBytes,\n\t\t};\n\n\t}\n\n}\n\n","import { B3DMLoaderBase } from '../../../core/renderer/loaders/B3DMLoaderBase.js';\nimport { DefaultLoadingManager, Matrix4 } from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n\nexport class B3DMLoader extends B3DMLoaderBase {\n\n\tconstructor( manager = DefaultLoadingManager ) {\n\n\t\tsuper();\n\t\tthis.manager = manager;\n\t\tthis.adjustmentTransform = new Matrix4();\n\n\t}\n\n\tparse( buffer ) {\n\n\t\tconst b3dm = super.parse( buffer );\n\t\tconst gltfBuffer = b3dm.glbBytes.slice().buffer;\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tconst manager = this.manager;\n\t\t\tconst fetchOptions = this.fetchOptions;\n\t\t\tconst loader = manager.getHandler( 'path.gltf' ) || new GLTFLoader( manager );\n\n\t\t\tif ( fetchOptions.credentials === 'include' && fetchOptions.mode === 'cors' ) {\n\n\t\t\t\tloader.setCrossOrigin( 'use-credentials' );\n\n\t\t\t}\n\n\t\t\tif ( 'credentials' in fetchOptions ) {\n\n\t\t\t\tloader.setWithCredentials( fetchOptions.credentials === 'include' );\n\n\t\t\t}\n\n\t\t\tif ( fetchOptions.headers ) {\n\n\t\t\t\tloader.setRequestHeader( fetchOptions.headers );\n\n\t\t\t}\n\n\t\t\t// GLTFLoader assumes the working path ends in a slash\n\t\t\tlet workingPath = this.workingPath;\n\t\t\tif ( ! /[\\\\/]$/.test( workingPath ) && workingPath.length ) {\n\n\t\t\t\tworkingPath += '/';\n\n\t\t\t}\n\n\t\t\tconst adjustmentTransform = this.adjustmentTransform;\n\n\t\t\tloader.parse( gltfBuffer, workingPath, model => {\n\n\t\t\t\tconst { batchTable, featureTable } = b3dm;\n\t\t\t\tconst { scene } = model;\n\n\t\t\t\tconst rtcCenter = featureTable.getData( 'RTC_CENTER', 1, 'FLOAT', 'VEC3' );\n\t\t\t\tif ( rtcCenter ) {\n\n\t\t\t\t\tscene.position.x += rtcCenter[ 0 ];\n\t\t\t\t\tscene.position.y += rtcCenter[ 1 ];\n\t\t\t\t\tscene.position.z += rtcCenter[ 2 ];\n\n\t\t\t\t}\n\n\t\t\t\tmodel.scene.updateMatrix();\n\t\t\t\tmodel.scene.matrix.multiply( adjustmentTransform );\n\t\t\t\tmodel.scene.matrix.decompose( model.scene.position, model.scene.quaternion, model.scene.scale );\n\n\t\t\t\tmodel.batchTable = batchTable;\n\t\t\t\tmodel.featureTable = featureTable;\n\n\t\t\t\tscene.batchTable = batchTable;\n\t\t\t\tscene.featureTable = featureTable;\n\n\t\t\t\tresolve( model );\n\n\t\t\t}, reject );\n\n\t\t} );\n\n\t}\n\n}\n"],"names":["B3DMLoaderBase","LoaderBase","buffer","dataView","magic","readMagicBytes","version","byteLength","featureTableJSONByteLength","featureTableBinaryByteLength","batchTableJSONByteLength","batchTableBinaryByteLength","featureTableStart","featureTableBuffer","featureTable","FeatureTable","batchTableStart","batchTableBuffer","batchTable","BatchTable","glbStart","glbBytes","B3DMLoader","manager","DefaultLoadingManager","Matrix4","b3dm","gltfBuffer","resolve","reject","fetchOptions","loader","GLTFLoader","workingPath","adjustmentTransform","model","scene","rtcCenter"],"mappings":"0KAQO,MAAMA,UAAuBC,CAAW,CAE9C,MAAOC,EAAS,CAGf,MAAMC,EAAW,IAAI,SAAUD,CAAQ,EAKjCE,EAAQC,EAAgBF,CAAU,EAExC,QAAQ,OAAQC,IAAU,MAAQ,EAGlC,MAAME,EAAUH,EAAS,UAAW,EAAG,EAAM,EAE7C,QAAQ,OAAQG,IAAY,CAAG,EAG/B,MAAMC,EAAaJ,EAAS,UAAW,EAAG,EAAM,EAEhD,QAAQ,OAAQI,IAAeL,EAAO,UAAY,EAGlD,MAAMM,EAA6BL,EAAS,UAAW,GAAI,EAAM,EAG3DM,EAA+BN,EAAS,UAAW,GAAI,EAAM,EAG7DO,EAA2BP,EAAS,UAAW,GAAI,EAAM,EAGzDQ,EAA6BR,EAAS,UAAW,GAAI,EAAM,EAG3DS,EAAoB,GACpBC,EAAqBX,EAAO,MACjCU,EACAA,EAAoBJ,EAA6BC,CACjD,EACKK,EAAe,IAAIC,EACxBF,EACA,EACAL,EACAC,CACA,EAGKO,EAAkBJ,EAAoBJ,EAA6BC,EACnEQ,EAAmBf,EAAO,MAC/Bc,EACAA,EAAkBN,EAA2BC,CAC7C,EACKO,EAAa,IAAIC,EACtBF,EACAH,EAAa,QAAS,cAAgB,EACtC,EACAJ,EACAC,CACA,EAEKS,EAAWJ,EAAkBN,EAA2BC,EACxDU,EAAW,IAAI,WAAYnB,EAAQkB,EAAUb,EAAaa,CAAU,EAE1E,MAAO,CACN,QAAAd,EACA,aAAAQ,EACA,WAAAI,EACA,SAAAG,CACA,CAEH,CAEA,CC/EO,MAAMC,UAAmBtB,CAAe,CAE9C,YAAauB,EAAUC,EAAwB,CAE9C,MAAO,EACP,KAAK,QAAUD,EACf,KAAK,oBAAsB,IAAIE,CAEjC,CAEC,MAAOvB,EAAS,CAEf,MAAMwB,EAAO,MAAM,MAAOxB,CAAQ,EAC5ByB,EAAaD,EAAK,SAAS,MAAO,EAAC,OACzC,OAAO,IAAI,QAAS,CAAEE,EAASC,IAAY,CAE1C,MAAMN,EAAU,KAAK,QACfO,EAAe,KAAK,aACpBC,EAASR,EAAQ,WAAY,WAAW,GAAM,IAAIS,EAAYT,CAAS,EAExEO,EAAa,cAAgB,WAAaA,EAAa,OAAS,QAEpEC,EAAO,eAAgB,iBAAmB,EAItC,gBAAiBD,GAErBC,EAAO,mBAAoBD,EAAa,cAAgB,SAAW,EAI/DA,EAAa,SAEjBC,EAAO,iBAAkBD,EAAa,OAAS,EAKhD,IAAIG,EAAc,KAAK,YAClB,CAAE,SAAS,KAAMA,CAAW,GAAMA,EAAY,SAElDA,GAAe,KAIhB,MAAMC,EAAsB,KAAK,oBAEjCH,EAAO,MAAOJ,EAAYM,EAAaE,GAAS,CAE/C,KAAM,CAAE,WAAAjB,EAAY,aAAAJ,CAAY,EAAKY,EAC/B,CAAE,MAAAU,CAAK,EAAKD,EAEZE,EAAYvB,EAAa,QAAS,aAAc,EAAG,QAAS,MAAQ,EACrEuB,IAEJD,EAAM,SAAS,GAAKC,EAAW,CAAG,EAClCD,EAAM,SAAS,GAAKC,EAAW,CAAG,EAClCD,EAAM,SAAS,GAAKC,EAAW,CAAG,GAInCF,EAAM,MAAM,aAAc,EAC1BA,EAAM,MAAM,OAAO,SAAUD,CAAqB,EAClDC,EAAM,MAAM,OAAO,UAAWA,EAAM,MAAM,SAAUA,EAAM,MAAM,WAAYA,EAAM,MAAM,KAAO,EAE/FA,EAAM,WAAajB,EACnBiB,EAAM,aAAerB,EAErBsB,EAAM,WAAalB,EACnBkB,EAAM,aAAetB,EAErBc,EAASO,CAAO,CAEhB,EAAEN,CAAQ,CAEd,CAAK,CAEL,CAEA"}