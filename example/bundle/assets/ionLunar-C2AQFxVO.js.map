{"version":3,"file":"ionLunar-C2AQFxVO.js","sources":["../../ionLunar.js"],"sourcesContent":["import {\n\tGlobeControls,\n\tTilesRenderer,\n} from '3d-tiles-renderer';\nimport {\n\tCesiumIonAuthPlugin,\n\tUpdateOnChangePlugin,\n\tTileCompressionPlugin,\n\tTilesFadePlugin,\n} from '3d-tiles-renderer/plugins';\nimport {\n\tScene,\n\tWebGLRenderer,\n\tPerspectiveCamera,\n} from 'three';\n\nlet controls, scene, camera, renderer, tiles;\n\ninit();\nanimate();\n\nfunction reinstantiateTiles() {\n\n\tif ( tiles ) {\n\n\t\tscene.remove( tiles.group );\n\t\ttiles.dispose();\n\t\ttiles = null;\n\n\t}\n\n\ttiles = new TilesRenderer();\n\ttiles.registerPlugin( new CesiumIonAuthPlugin( { apiToken: import.meta.env.VITE_ION_KEY, assetId: '2684829', autoRefreshToken: true } ) );\n\ttiles.registerPlugin( new TileCompressionPlugin() );\n\ttiles.registerPlugin( new UpdateOnChangePlugin() );\n\ttiles.registerPlugin( new TilesFadePlugin() );\n\ttiles.group.rotation.x = - Math.PI / 2;\n\ttiles.errorTarget = 20;\n\tscene.add( tiles.group );\n\n\ttiles.setCamera( camera );\n\tcontrols.setEllipsoid( tiles.ellipsoid, tiles.group );\n\n}\n\nfunction init() {\n\n\t// renderer\n\trenderer = new WebGLRenderer( { antialias: true } );\n\trenderer.setClearColor( 0x131619 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene\n\tscene = new Scene();\n\tcamera = new PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 1, 160000000 );\n\tcamera.position.set( 2620409, 0, - 6249816 );\n\tcamera.lookAt( 0, 0, 0 );\n\n\t// controls\n\tcontrols = new GlobeControls( scene, camera, renderer.domElement, null );\n\tcontrols.enableDamping = true;\n\n\t// initialize tiles\n\treinstantiateTiles();\n\n\tonWindowResize();\n\twindow.addEventListener( 'resize', onWindowResize, false );\n\n}\n\nfunction onWindowResize() {\n\n\tconst aspect = window.innerWidth / window.innerHeight;\n\tcamera.aspect = aspect;\n\tcamera.updateProjectionMatrix();\n\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tif ( ! tiles ) return;\n\n\tcontrols.update();\n\n\t// update options\n\ttiles.setResolutionFromRenderer( camera, renderer );\n\n\t// update tiles\n\tcamera.updateMatrixWorld();\n\ttiles.update();\n\n\trenderer.render( scene, camera );\n\n}\n"],"names":["controls","scene","camera","renderer","tiles","init","animate","reinstantiateTiles","TilesRenderer","CesiumIonAuthPlugin","TileCompressionPlugin","UpdateOnChangePlugin","TilesFadePlugin","WebGLRenderer","Scene","PerspectiveCamera","GlobeControls","onWindowResize","aspect"],"mappings":"24BAgBA,IAAIA,EAAUC,EAAOC,EAAQC,EAAUC,EAEvCC,EAAK,EACLC,EAAQ,EAER,SAASC,GAAqB,CAExBH,IAEEH,EAAA,OAAQG,EAAM,KAAM,EAC1BA,EAAM,QAAQ,EACNA,EAAA,MAITA,EAAQ,IAAII,EACNJ,EAAA,eAAgB,IAAIK,EAAqB,CAAE,SAAU,GAA8B,QAAS,UAAW,iBAAkB,EAAO,CAAA,CAAE,EAClIL,EAAA,eAAgB,IAAIM,CAAwB,EAC5CN,EAAA,eAAgB,IAAIO,CAAuB,EAC3CP,EAAA,eAAgB,IAAIQ,CAAkB,EAC5CR,EAAM,MAAM,SAAS,EAAI,CAAE,KAAK,GAAK,EACrCA,EAAM,YAAc,GACdH,EAAA,IAAKG,EAAM,KAAM,EAEvBA,EAAM,UAAWF,CAAO,EACxBF,EAAS,aAAcI,EAAM,UAAWA,EAAM,KAAM,CAErD,CAEA,SAASC,GAAO,CAGfF,EAAW,IAAIU,EAAe,CAAE,UAAW,GAAO,EAClDV,EAAS,cAAe,OAAS,EACxB,SAAA,KAAK,YAAaA,EAAS,UAAW,EAG/CF,EAAQ,IAAIa,EACHZ,EAAA,IAAIa,EAAmB,GAAI,OAAO,WAAa,OAAO,YAAa,EAAG,IAAU,EACzFb,EAAO,SAAS,IAAK,QAAS,EAAG,QAAU,EACpCA,EAAA,OAAQ,EAAG,EAAG,CAAE,EAGvBF,EAAW,IAAIgB,EAAef,EAAOC,EAAQC,EAAS,WAAY,IAAK,EACvEH,EAAS,cAAgB,GAGNO,EAAA,EAEJU,EAAA,EACR,OAAA,iBAAkB,SAAUA,EAAgB,EAAM,CAE1D,CAEA,SAASA,GAAiB,CAEnB,MAAAC,EAAS,OAAO,WAAa,OAAO,YAC1ChB,EAAO,OAASgB,EAChBhB,EAAO,uBAAuB,EAE9BC,EAAS,QAAS,OAAO,WAAY,OAAO,WAAY,EAC/CA,EAAA,cAAe,OAAO,gBAAiB,CAEjD,CAEA,SAASG,GAAU,CAElB,sBAAuBA,CAAQ,EAExBF,IAEPJ,EAAS,OAAO,EAGVI,EAAA,0BAA2BF,EAAQC,CAAS,EAGlDD,EAAO,kBAAkB,EACzBE,EAAM,OAAO,EAEJD,EAAA,OAAQF,EAAOC,CAAO,EAEhC"}