{"version":3,"file":"vr-DUskyT7k.js","sources":["../../../node_modules/three/examples/jsm/webxr/VRButton.js","../../../node_modules/three/examples/jsm/libs/motion-controllers.module.js","../../../node_modules/three/examples/jsm/webxr/XRControllerModelFactory.js","../../vr.js"],"sourcesContent":["class VRButton {\n\n\tstatic createButton( renderer, sessionInit = {} ) {\n\n\t\tconst button = document.createElement( 'button' );\n\n\t\tfunction showEnterVR( /*device*/ ) {\n\n\t\t\tlet currentSession = null;\n\n\t\t\tasync function onSessionStarted( session ) {\n\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\n\n\t\t\t\tawait renderer.xr.setSession( session );\n\t\t\t\tbutton.textContent = 'EXIT VR';\n\n\t\t\t\tcurrentSession = session;\n\n\t\t\t}\n\n\t\t\tfunction onSessionEnded( /*event*/ ) {\n\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\n\n\t\t\t\tbutton.textContent = 'ENTER VR';\n\n\t\t\t\tcurrentSession = null;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tbutton.style.display = '';\n\n\t\t\tbutton.style.cursor = 'pointer';\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\n\t\t\tbutton.style.width = '100px';\n\n\t\t\tbutton.textContent = 'ENTER VR';\n\n\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\n\t\t\t// was requested at session creation time. For simplicity, just ask for\n\t\t\t// the interesting ones as optional features, but be aware that the\n\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\n\t\t\t// ('local' is always available for immersive sessions and doesn't need to\n\t\t\t// be requested separately.)\n\n\t\t\tconst sessionOptions = {\n\t\t\t\t...sessionInit,\n\t\t\t\toptionalFeatures: [\n\t\t\t\t\t'local-floor',\n\t\t\t\t\t'bounded-floor',\n\t\t\t\t\t'layers',\n\t\t\t\t\t...( sessionInit.optionalFeatures || [] )\n\t\t\t\t],\n\t\t\t};\n\n\t\t\tbutton.onmouseenter = function () {\n\n\t\t\t\tbutton.style.opacity = '1.0';\n\n\t\t\t};\n\n\t\t\tbutton.onmouseleave = function () {\n\n\t\t\t\tbutton.style.opacity = '0.5';\n\n\t\t\t};\n\n\t\t\tbutton.onclick = function () {\n\n\t\t\t\tif ( currentSession === null ) {\n\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionOptions ).then( onSessionStarted );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcurrentSession.end();\n\n\t\t\t\t\tif ( navigator.xr.offerSession !== undefined ) {\n\n\t\t\t\t\t\tnavigator.xr.offerSession( 'immersive-vr', sessionOptions )\n\t\t\t\t\t\t\t.then( onSessionStarted )\n\t\t\t\t\t\t\t.catch( ( err ) => {\n\n\t\t\t\t\t\t\t\tconsole.warn( err );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tif ( navigator.xr.offerSession !== undefined ) {\n\n\t\t\t\tnavigator.xr.offerSession( 'immersive-vr', sessionOptions )\n\t\t\t\t\t.then( onSessionStarted )\n\t\t\t\t\t.catch( ( err ) => {\n\n\t\t\t\t\t\tconsole.warn( err );\n\n\t\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableButton() {\n\n\t\t\tbutton.style.display = '';\n\n\t\t\tbutton.style.cursor = 'auto';\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\n\t\t\tbutton.style.width = '150px';\n\n\t\t\tbutton.onmouseenter = null;\n\t\t\tbutton.onmouseleave = null;\n\n\t\t\tbutton.onclick = null;\n\n\t\t}\n\n\t\tfunction showWebXRNotFound() {\n\n\t\t\tdisableButton();\n\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\n\n\t\t}\n\n\t\tfunction showVRNotAllowed( exception ) {\n\n\t\t\tdisableButton();\n\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\n\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\n\n\t\t}\n\n\t\tfunction stylizeElement( element ) {\n\n\t\t\telement.style.position = 'absolute';\n\t\t\telement.style.bottom = '20px';\n\t\t\telement.style.padding = '12px 6px';\n\t\t\telement.style.border = '1px solid #fff';\n\t\t\telement.style.borderRadius = '4px';\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\n\t\t\telement.style.color = '#fff';\n\t\t\telement.style.font = 'normal 13px sans-serif';\n\t\t\telement.style.textAlign = 'center';\n\t\t\telement.style.opacity = '0.5';\n\t\t\telement.style.outline = 'none';\n\t\t\telement.style.zIndex = '999';\n\n\t\t}\n\n\t\tif ( 'xr' in navigator ) {\n\n\t\t\tbutton.id = 'VRButton';\n\t\t\tbutton.style.display = 'none';\n\n\t\t\tstylizeElement( button );\n\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\n\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\n\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\n\n\t\t\t\t\tbutton.click();\n\n\t\t\t\t}\n\n\t\t\t} ).catch( showVRNotAllowed );\n\n\t\t\treturn button;\n\n\t\t} else {\n\n\t\t\tconst message = document.createElement( 'a' );\n\n\t\t\tif ( window.isSecureContext === false ) {\n\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n\n\t\t\t} else {\n\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\n\n\t\t\t}\n\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\n\t\t\tmessage.style.width = '180px';\n\t\t\tmessage.style.textDecoration = 'none';\n\n\t\t\tstylizeElement( message );\n\n\t\t\treturn message;\n\n\t\t}\n\n\t}\n\n\tstatic registerSessionGrantedListener() {\n\n\t\tif ( typeof navigator !== 'undefined' && 'xr' in navigator ) {\n\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\n\t\t\t// throws a silent exception and aborts execution entirely.\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\n\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\n\n\t\t\t\tVRButton.xrSessionIsGranted = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n}\n\nVRButton.xrSessionIsGranted = false;\nVRButton.registerSessionGrantedListener();\n\nexport { VRButton };\n","/**\n * @webxr-input-profiles/motion-controllers 1.0.0 https://github.com/immersive-web/webxr-input-profiles\n */\n\nconst Constants = {\n  Handedness: Object.freeze({\n    NONE: 'none',\n    LEFT: 'left',\n    RIGHT: 'right'\n  }),\n\n  ComponentState: Object.freeze({\n    DEFAULT: 'default',\n    TOUCHED: 'touched',\n    PRESSED: 'pressed'\n  }),\n\n  ComponentProperty: Object.freeze({\n    BUTTON: 'button',\n    X_AXIS: 'xAxis',\n    Y_AXIS: 'yAxis',\n    STATE: 'state'\n  }),\n\n  ComponentType: Object.freeze({\n    TRIGGER: 'trigger',\n    SQUEEZE: 'squeeze',\n    TOUCHPAD: 'touchpad',\n    THUMBSTICK: 'thumbstick',\n    BUTTON: 'button'\n  }),\n\n  ButtonTouchThreshold: 0.05,\n\n  AxisTouchThreshold: 0.1,\n\n  VisualResponseProperty: Object.freeze({\n    TRANSFORM: 'transform',\n    VISIBILITY: 'visibility'\n  })\n};\n\n/**\n * @description Static helper function to fetch a JSON file and turn it into a JS object\n * @param {string} path - Path to JSON file to be fetched\n */\nasync function fetchJsonFile(path) {\n  const response = await fetch(path);\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  } else {\n    return response.json();\n  }\n}\n\nasync function fetchProfilesList(basePath) {\n  if (!basePath) {\n    throw new Error('No basePath supplied');\n  }\n\n  const profileListFileName = 'profilesList.json';\n  const profilesList = await fetchJsonFile(`${basePath}/${profileListFileName}`);\n  return profilesList;\n}\n\nasync function fetchProfile(xrInputSource, basePath, defaultProfile = null, getAssetPath = true) {\n  if (!xrInputSource) {\n    throw new Error('No xrInputSource supplied');\n  }\n\n  if (!basePath) {\n    throw new Error('No basePath supplied');\n  }\n\n  // Get the list of profiles\n  const supportedProfilesList = await fetchProfilesList(basePath);\n\n  // Find the relative path to the first requested profile that is recognized\n  let match;\n  xrInputSource.profiles.some((profileId) => {\n    const supportedProfile = supportedProfilesList[profileId];\n    if (supportedProfile) {\n      match = {\n        profileId,\n        profilePath: `${basePath}/${supportedProfile.path}`,\n        deprecated: !!supportedProfile.deprecated\n      };\n    }\n    return !!match;\n  });\n\n  if (!match) {\n    if (!defaultProfile) {\n      throw new Error('No matching profile name found');\n    }\n\n    const supportedProfile = supportedProfilesList[defaultProfile];\n    if (!supportedProfile) {\n      throw new Error(`No matching profile name found and default profile \"${defaultProfile}\" missing.`);\n    }\n\n    match = {\n      profileId: defaultProfile,\n      profilePath: `${basePath}/${supportedProfile.path}`,\n      deprecated: !!supportedProfile.deprecated\n    };\n  }\n\n  const profile = await fetchJsonFile(match.profilePath);\n\n  let assetPath;\n  if (getAssetPath) {\n    let layout;\n    if (xrInputSource.handedness === 'any') {\n      layout = profile.layouts[Object.keys(profile.layouts)[0]];\n    } else {\n      layout = profile.layouts[xrInputSource.handedness];\n    }\n    if (!layout) {\n      throw new Error(\n        `No matching handedness, ${xrInputSource.handedness}, in profile ${match.profileId}`\n      );\n    }\n\n    if (layout.assetPath) {\n      assetPath = match.profilePath.replace('profile.json', layout.assetPath);\n    }\n  }\n\n  return { profile, assetPath };\n}\n\n/** @constant {Object} */\nconst defaultComponentValues = {\n  xAxis: 0,\n  yAxis: 0,\n  button: 0,\n  state: Constants.ComponentState.DEFAULT\n};\n\n/**\n * @description Converts an X, Y coordinate from the range -1 to 1 (as reported by the Gamepad\n * API) to the range 0 to 1 (for interpolation). Also caps the X, Y values to be bounded within\n * a circle. This ensures that thumbsticks are not animated outside the bounds of their physical\n * range of motion and touchpads do not report touch locations off their physical bounds.\n * @param {number} x The original x coordinate in the range -1 to 1\n * @param {number} y The original y coordinate in the range -1 to 1\n */\nfunction normalizeAxes(x = 0, y = 0) {\n  let xAxis = x;\n  let yAxis = y;\n\n  // Determine if the point is outside the bounds of the circle\n  // and, if so, place it on the edge of the circle\n  const hypotenuse = Math.sqrt((x * x) + (y * y));\n  if (hypotenuse > 1) {\n    const theta = Math.atan2(y, x);\n    xAxis = Math.cos(theta);\n    yAxis = Math.sin(theta);\n  }\n\n  // Scale and move the circle so values are in the interpolation range.  The circle's origin moves\n  // from (0, 0) to (0.5, 0.5). The circle's radius scales from 1 to be 0.5.\n  const result = {\n    normalizedXAxis: (xAxis * 0.5) + 0.5,\n    normalizedYAxis: (yAxis * 0.5) + 0.5\n  };\n  return result;\n}\n\n/**\n * Contains the description of how the 3D model should visually respond to a specific user input.\n * This is accomplished by initializing the object with the name of a node in the 3D model and\n * property that need to be modified in response to user input, the name of the nodes representing\n * the allowable range of motion, and the name of the input which triggers the change. In response\n * to the named input changing, this object computes the appropriate weighting to use for\n * interpolating between the range of motion nodes.\n */\nclass VisualResponse {\n  constructor(visualResponseDescription) {\n    this.componentProperty = visualResponseDescription.componentProperty;\n    this.states = visualResponseDescription.states;\n    this.valueNodeName = visualResponseDescription.valueNodeName;\n    this.valueNodeProperty = visualResponseDescription.valueNodeProperty;\n\n    if (this.valueNodeProperty === Constants.VisualResponseProperty.TRANSFORM) {\n      this.minNodeName = visualResponseDescription.minNodeName;\n      this.maxNodeName = visualResponseDescription.maxNodeName;\n    }\n\n    // Initializes the response's current value based on default data\n    this.value = 0;\n    this.updateFromComponent(defaultComponentValues);\n  }\n\n  /**\n   * Computes the visual response's interpolation weight based on component state\n   * @param {Object} componentValues - The component from which to update\n   * @param {number} xAxis - The reported X axis value of the component\n   * @param {number} yAxis - The reported Y axis value of the component\n   * @param {number} button - The reported value of the component's button\n   * @param {string} state - The component's active state\n   */\n  updateFromComponent({\n    xAxis, yAxis, button, state\n  }) {\n    const { normalizedXAxis, normalizedYAxis } = normalizeAxes(xAxis, yAxis);\n    switch (this.componentProperty) {\n      case Constants.ComponentProperty.X_AXIS:\n        this.value = (this.states.includes(state)) ? normalizedXAxis : 0.5;\n        break;\n      case Constants.ComponentProperty.Y_AXIS:\n        this.value = (this.states.includes(state)) ? normalizedYAxis : 0.5;\n        break;\n      case Constants.ComponentProperty.BUTTON:\n        this.value = (this.states.includes(state)) ? button : 0;\n        break;\n      case Constants.ComponentProperty.STATE:\n        if (this.valueNodeProperty === Constants.VisualResponseProperty.VISIBILITY) {\n          this.value = (this.states.includes(state));\n        } else {\n          this.value = this.states.includes(state) ? 1.0 : 0.0;\n        }\n        break;\n      default:\n        throw new Error(`Unexpected visualResponse componentProperty ${this.componentProperty}`);\n    }\n  }\n}\n\nclass Component {\n  /**\n   * @param {Object} componentId - Id of the component\n   * @param {Object} componentDescription - Description of the component to be created\n   */\n  constructor(componentId, componentDescription) {\n    if (!componentId\n     || !componentDescription\n     || !componentDescription.visualResponses\n     || !componentDescription.gamepadIndices\n     || Object.keys(componentDescription.gamepadIndices).length === 0) {\n      throw new Error('Invalid arguments supplied');\n    }\n\n    this.id = componentId;\n    this.type = componentDescription.type;\n    this.rootNodeName = componentDescription.rootNodeName;\n    this.touchPointNodeName = componentDescription.touchPointNodeName;\n\n    // Build all the visual responses for this component\n    this.visualResponses = {};\n    Object.keys(componentDescription.visualResponses).forEach((responseName) => {\n      const visualResponse = new VisualResponse(componentDescription.visualResponses[responseName]);\n      this.visualResponses[responseName] = visualResponse;\n    });\n\n    // Set default values\n    this.gamepadIndices = Object.assign({}, componentDescription.gamepadIndices);\n\n    this.values = {\n      state: Constants.ComponentState.DEFAULT,\n      button: (this.gamepadIndices.button !== undefined) ? 0 : undefined,\n      xAxis: (this.gamepadIndices.xAxis !== undefined) ? 0 : undefined,\n      yAxis: (this.gamepadIndices.yAxis !== undefined) ? 0 : undefined\n    };\n  }\n\n  get data() {\n    const data = { id: this.id, ...this.values };\n    return data;\n  }\n\n  /**\n   * @description Poll for updated data based on current gamepad state\n   * @param {Object} gamepad - The gamepad object from which the component data should be polled\n   */\n  updateFromGamepad(gamepad) {\n    // Set the state to default before processing other data sources\n    this.values.state = Constants.ComponentState.DEFAULT;\n\n    // Get and normalize button\n    if (this.gamepadIndices.button !== undefined\n        && gamepad.buttons.length > this.gamepadIndices.button) {\n      const gamepadButton = gamepad.buttons[this.gamepadIndices.button];\n      this.values.button = gamepadButton.value;\n      this.values.button = (this.values.button < 0) ? 0 : this.values.button;\n      this.values.button = (this.values.button > 1) ? 1 : this.values.button;\n\n      // Set the state based on the button\n      if (gamepadButton.pressed || this.values.button === 1) {\n        this.values.state = Constants.ComponentState.PRESSED;\n      } else if (gamepadButton.touched || this.values.button > Constants.ButtonTouchThreshold) {\n        this.values.state = Constants.ComponentState.TOUCHED;\n      }\n    }\n\n    // Get and normalize x axis value\n    if (this.gamepadIndices.xAxis !== undefined\n        && gamepad.axes.length > this.gamepadIndices.xAxis) {\n      this.values.xAxis = gamepad.axes[this.gamepadIndices.xAxis];\n      this.values.xAxis = (this.values.xAxis < -1) ? -1 : this.values.xAxis;\n      this.values.xAxis = (this.values.xAxis > 1) ? 1 : this.values.xAxis;\n\n      // If the state is still default, check if the xAxis makes it touched\n      if (this.values.state === Constants.ComponentState.DEFAULT\n        && Math.abs(this.values.xAxis) > Constants.AxisTouchThreshold) {\n        this.values.state = Constants.ComponentState.TOUCHED;\n      }\n    }\n\n    // Get and normalize Y axis value\n    if (this.gamepadIndices.yAxis !== undefined\n        && gamepad.axes.length > this.gamepadIndices.yAxis) {\n      this.values.yAxis = gamepad.axes[this.gamepadIndices.yAxis];\n      this.values.yAxis = (this.values.yAxis < -1) ? -1 : this.values.yAxis;\n      this.values.yAxis = (this.values.yAxis > 1) ? 1 : this.values.yAxis;\n\n      // If the state is still default, check if the yAxis makes it touched\n      if (this.values.state === Constants.ComponentState.DEFAULT\n        && Math.abs(this.values.yAxis) > Constants.AxisTouchThreshold) {\n        this.values.state = Constants.ComponentState.TOUCHED;\n      }\n    }\n\n    // Update the visual response weights based on the current component data\n    Object.values(this.visualResponses).forEach((visualResponse) => {\n      visualResponse.updateFromComponent(this.values);\n    });\n  }\n}\n\n/**\n  * @description Builds a motion controller with components and visual responses based on the\n  * supplied profile description. Data is polled from the xrInputSource's gamepad.\n  * @author Nell Waliczek / https://github.com/NellWaliczek\n*/\nclass MotionController {\n  /**\n   * @param {Object} xrInputSource - The XRInputSource to build the MotionController around\n   * @param {Object} profile - The best matched profile description for the supplied xrInputSource\n   * @param {Object} assetUrl\n   */\n  constructor(xrInputSource, profile, assetUrl) {\n    if (!xrInputSource) {\n      throw new Error('No xrInputSource supplied');\n    }\n\n    if (!profile) {\n      throw new Error('No profile supplied');\n    }\n\n    this.xrInputSource = xrInputSource;\n    this.assetUrl = assetUrl;\n    this.id = profile.profileId;\n\n    // Build child components as described in the profile description\n    this.layoutDescription = profile.layouts[xrInputSource.handedness];\n    this.components = {};\n    Object.keys(this.layoutDescription.components).forEach((componentId) => {\n      const componentDescription = this.layoutDescription.components[componentId];\n      this.components[componentId] = new Component(componentId, componentDescription);\n    });\n\n    // Initialize components based on current gamepad state\n    this.updateFromGamepad();\n  }\n\n  get gripSpace() {\n    return this.xrInputSource.gripSpace;\n  }\n\n  get targetRaySpace() {\n    return this.xrInputSource.targetRaySpace;\n  }\n\n  /**\n   * @description Returns a subset of component data for simplified debugging\n   */\n  get data() {\n    const data = [];\n    Object.values(this.components).forEach((component) => {\n      data.push(component.data);\n    });\n    return data;\n  }\n\n  /**\n   * @description Poll for updated data based on current gamepad state\n   */\n  updateFromGamepad() {\n    Object.values(this.components).forEach((component) => {\n      component.updateFromGamepad(this.xrInputSource.gamepad);\n    });\n  }\n}\n\nexport { Constants, MotionController, fetchProfile, fetchProfilesList };\n","import {\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tSphereGeometry,\n} from 'three';\n\nimport { GLTFLoader } from '../loaders/GLTFLoader.js';\n\nimport {\n\tConstants as MotionControllerConstants,\n\tfetchProfile,\n\tMotionController\n} from '../libs/motion-controllers.module.js';\n\nconst DEFAULT_PROFILES_PATH = 'https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles';\nconst DEFAULT_PROFILE = 'generic-trigger';\n\nclass XRControllerModel extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.motionController = null;\n\t\tthis.envMap = null;\n\n\t}\n\n\tsetEnvironmentMap( envMap ) {\n\n\t\tif ( this.envMap == envMap ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.envMap = envMap;\n\t\tthis.traverse( ( child ) => {\n\n\t\t\tif ( child.isMesh ) {\n\n\t\t\t\tchild.material.envMap = this.envMap;\n\t\t\t\tchild.material.needsUpdate = true;\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Polls data from the XRInputSource and updates the model's components to match\n\t * the real world data\n\t */\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( ! this.motionController ) return;\n\n\t\t// Cause the MotionController to poll the Gamepad for data\n\t\tthis.motionController.updateFromGamepad();\n\n\t\t// Update the 3D model to reflect the button, thumbstick, and touchpad state\n\t\tObject.values( this.motionController.components ).forEach( ( component ) => {\n\n\t\t\t// Update node data based on the visual responses' current states\n\t\t\tObject.values( component.visualResponses ).forEach( ( visualResponse ) => {\n\n\t\t\t\tconst { valueNode, minNode, maxNode, value, valueNodeProperty } = visualResponse;\n\n\t\t\t\t// Skip if the visual response node is not found. No error is needed,\n\t\t\t\t// because it will have been reported at load time.\n\t\t\t\tif ( ! valueNode ) return;\n\n\t\t\t\t// Calculate the new properties based on the weight supplied\n\t\t\t\tif ( valueNodeProperty === MotionControllerConstants.VisualResponseProperty.VISIBILITY ) {\n\n\t\t\t\t\tvalueNode.visible = value;\n\n\t\t\t\t} else if ( valueNodeProperty === MotionControllerConstants.VisualResponseProperty.TRANSFORM ) {\n\n\t\t\t\t\tvalueNode.quaternion.slerpQuaternions(\n\t\t\t\t\t\tminNode.quaternion,\n\t\t\t\t\t\tmaxNode.quaternion,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t);\n\n\t\t\t\t\tvalueNode.position.lerpVectors(\n\t\t\t\t\t\tminNode.position,\n\t\t\t\t\t\tmaxNode.position,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n}\n\n/**\n * Walks the model's tree to find the nodes needed to animate the components and\n * saves them to the motionContoller components for use in the frame loop. When\n * touchpads are found, attaches a touch dot to them.\n */\nfunction findNodes( motionController, scene ) {\n\n\t// Loop through the components and find the nodes needed for each components' visual responses\n\tObject.values( motionController.components ).forEach( ( component ) => {\n\n\t\tconst { type, touchPointNodeName, visualResponses } = component;\n\n\t\tif ( type === MotionControllerConstants.ComponentType.TOUCHPAD ) {\n\n\t\t\tcomponent.touchPointNode = scene.getObjectByName( touchPointNodeName );\n\t\t\tif ( component.touchPointNode ) {\n\n\t\t\t\t// Attach a touch dot to the touchpad.\n\t\t\t\tconst sphereGeometry = new SphereGeometry( 0.001 );\n\t\t\t\tconst material = new MeshBasicMaterial( { color: 0x0000FF } );\n\t\t\t\tconst sphere = new Mesh( sphereGeometry, material );\n\t\t\t\tcomponent.touchPointNode.add( sphere );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( `Could not find touch dot, ${component.touchPointNodeName}, in touchpad component ${component.id}` );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Loop through all the visual responses to be applied to this component\n\t\tObject.values( visualResponses ).forEach( ( visualResponse ) => {\n\n\t\t\tconst { valueNodeName, minNodeName, maxNodeName, valueNodeProperty } = visualResponse;\n\n\t\t\t// If animating a transform, find the two nodes to be interpolated between.\n\t\t\tif ( valueNodeProperty === MotionControllerConstants.VisualResponseProperty.TRANSFORM ) {\n\n\t\t\t\tvisualResponse.minNode = scene.getObjectByName( minNodeName );\n\t\t\t\tvisualResponse.maxNode = scene.getObjectByName( maxNodeName );\n\n\t\t\t\t// If the extents cannot be found, skip this animation\n\t\t\t\tif ( ! visualResponse.minNode ) {\n\n\t\t\t\t\tconsole.warn( `Could not find ${minNodeName} in the model` );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! visualResponse.maxNode ) {\n\n\t\t\t\t\tconsole.warn( `Could not find ${maxNodeName} in the model` );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// If the target node cannot be found, skip this animation\n\t\t\tvisualResponse.valueNode = scene.getObjectByName( valueNodeName );\n\t\t\tif ( ! visualResponse.valueNode ) {\n\n\t\t\t\tconsole.warn( `Could not find ${valueNodeName} in the model` );\n\n\t\t\t}\n\n\t\t} );\n\n\t} );\n\n}\n\nfunction addAssetSceneToControllerModel( controllerModel, scene ) {\n\n\t// Find the nodes needed for animation and cache them on the motionController.\n\tfindNodes( controllerModel.motionController, scene );\n\n\t// Apply any environment map that the mesh already has set.\n\tif ( controllerModel.envMap ) {\n\n\t\tscene.traverse( ( child ) => {\n\n\t\t\tif ( child.isMesh ) {\n\n\t\t\t\tchild.material.envMap = controllerModel.envMap;\n\t\t\t\tchild.material.needsUpdate = true;\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t// Add the glTF scene to the controllerModel.\n\tcontrollerModel.add( scene );\n\n}\n\nclass XRControllerModelFactory {\n\n\tconstructor( gltfLoader = null, onLoad = null ) {\n\n\t\tthis.gltfLoader = gltfLoader;\n\t\tthis.path = DEFAULT_PROFILES_PATH;\n\t\tthis._assetCache = {};\n\t\tthis.onLoad = onLoad;\n\n\t\t// If a GLTFLoader wasn't supplied to the constructor create a new one.\n\t\tif ( ! this.gltfLoader ) {\n\n\t\t\tthis.gltfLoader = new GLTFLoader();\n\n\t\t}\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\n\t\treturn this;\n\n\t}\n\n\tcreateControllerModel( controller ) {\n\n\t\tconst controllerModel = new XRControllerModel();\n\t\tlet scene = null;\n\n\t\tcontroller.addEventListener( 'connected', ( event ) => {\n\n\t\t\tconst xrInputSource = event.data;\n\n\t\t\tif ( xrInputSource.targetRayMode !== 'tracked-pointer' || ! xrInputSource.gamepad || xrInputSource.hand ) return;\n\n\t\t\tfetchProfile( xrInputSource, this.path, DEFAULT_PROFILE ).then( ( { profile, assetPath } ) => {\n\n\t\t\t\tcontrollerModel.motionController = new MotionController(\n\t\t\t\t\txrInputSource,\n\t\t\t\t\tprofile,\n\t\t\t\t\tassetPath\n\t\t\t\t);\n\n\t\t\t\tconst cachedAsset = this._assetCache[ controllerModel.motionController.assetUrl ];\n\t\t\t\tif ( cachedAsset ) {\n\n\t\t\t\t\tscene = cachedAsset.scene.clone();\n\n\t\t\t\t\taddAssetSceneToControllerModel( controllerModel, scene );\n\n\t\t\t\t\tif ( this.onLoad ) this.onLoad( scene );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! this.gltfLoader ) {\n\n\t\t\t\t\t\tthrow new Error( 'GLTFLoader not set.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.gltfLoader.setPath( '' );\n\t\t\t\t\tthis.gltfLoader.load( controllerModel.motionController.assetUrl, ( asset ) => {\n\n\t\t\t\t\t\tthis._assetCache[ controllerModel.motionController.assetUrl ] = asset;\n\n\t\t\t\t\t\tscene = asset.scene.clone();\n\n\t\t\t\t\t\taddAssetSceneToControllerModel( controllerModel, scene );\n\n\t\t\t\t\t\tif ( this.onLoad ) this.onLoad( scene );\n\n\t\t\t\t\t},\n\t\t\t\t\tnull,\n\t\t\t\t\t() => {\n\n\t\t\t\t\t\tthrow new Error( `Asset ${controllerModel.motionController.assetUrl} missing or malformed.` );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} ).catch( ( err ) => {\n\n\t\t\t\tconsole.warn( err );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\tcontroller.addEventListener( 'disconnected', () => {\n\n\t\t\tcontrollerModel.motionController = null;\n\t\t\tcontrollerModel.remove( scene );\n\t\t\tscene = null;\n\n\t\t} );\n\n\t\treturn controllerModel;\n\n\t}\n\n}\n\nexport { XRControllerModelFactory };\n","import { TilesRenderer } from '3d-tiles-renderer';\nimport {\n\tScene,\n\tDirectionalLight,\n\tAmbientLight,\n\tWebGLRenderer,\n\tPerspectiveCamera,\n\tBox3,\n\tRaycaster,\n\tMesh,\n\tMeshBasicMaterial,\n\tGroup,\n\tTorusGeometry,\n\tGridHelper,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tLineBasicMaterial,\n\tAdditiveBlending,\n\tLine,\n\tVector3,\n\tRingGeometry,\n\tSphere,\n} from 'three';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { VRButton } from 'three/examples/jsm/webxr/VRButton.js';\nimport { XRControllerModelFactory } from 'three/examples/jsm/webxr/XRControllerModelFactory.js';\n\nlet camera, scene, renderer, tiles;\nlet workspace;\nlet box, sphere, grid;\nlet raycaster, fwdVector, intersectRing;\nlet offsetParent;\nlet controller, controllerGrip;\nlet xrSession = null;\nconst tasks = [];\nconst upVector = new Vector3( 0, 1, 0 );\n\nconst params = {\n\n\t'displayGrid': true,\n\n};\n\ninit();\n\nfunction init() {\n\n\tscene = new Scene();\n\n\t// primary camera view\n\trenderer = new WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( 0xbbbbbb );\n\trenderer.xr.enabled = true;\n\n\tdocument.body.appendChild( renderer.domElement );\n\trenderer.domElement.tabIndex = 1;\n\n\trenderer.setAnimationLoop( animate );\n\n\t// create workspace\n\tworkspace = new Group();\n\tscene.add( workspace );\n\n\tgrid = new GridHelper( 10, 10, 0xffffff, 0xffffff );\n\tgrid.material.transparent = true;\n\tgrid.material.opacity = 0.5;\n\tgrid.material.depthWrite = false;\n\tworkspace.add( grid );\n\n\tcamera = new PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 0.1, 4000 );\n\tcamera.position.set( 0, 1, 0 );\n\tworkspace.add( camera );\n\n\t// lights\n\tconst dirLight = new DirectionalLight( 0xffffff );\n\tdirLight.position.set( 1, 2, 3 );\n\tscene.add( dirLight );\n\n\tconst ambLight = new AmbientLight( 0xffffff, 0.2 );\n\tscene.add( ambLight );\n\n\t// tile set\n\tbox = new Box3();\n\tsphere = new Sphere();\n\n\t// parent for centering the tileset\n\toffsetParent = new Group();\n\toffsetParent.rotation.x = Math.PI / 2;\n\toffsetParent.position.y = 32;\n\tscene.add( offsetParent );\n\n\ttiles = new TilesRenderer( 'https://raw.githubusercontent.com/NASA-AMMOS/3DTilesSampleData/master/msl-dingo-gap/0528_0260184_to_s64o256_colorize/scene-tileset.json' );\n\toffsetParent.add( tiles.group );\n\n\t// We set camera for tileset\n\ttiles.setCamera( camera );\n\ttiles.setResolutionFromRenderer( camera, renderer );\n\n\n\t// We define a custom scheduling callback to handle also active WebXR sessions\n\tconst tilesSchedulingCB = func => {\n\n\t\ttasks.push( func );\n\n\t};\n\n\t// We set our scheduling callback for tiles downloading and parsing\n\ttiles.downloadQueue.schedulingCallback = tilesSchedulingCB;\n\ttiles.parseQueue.schedulingCallback = tilesSchedulingCB;\n\n\ttiles.lruCache.maxSize = 1200;\n\ttiles.lruCache.minSize = 900;\n\n\t// Raycasting init\n\traycaster = new Raycaster();\n\tfwdVector = new Vector3( 0, 0, 1 );\n\n\tconst rayIntersectMat = new MeshBasicMaterial( { color: 0xb2dfdb } );\n\tintersectRing = new Mesh( new TorusGeometry( 1.5, 0.2, 16, 100 ), rayIntersectMat );\n\tintersectRing.visible = false;\n\tscene.add( intersectRing );\n\n\t// vr setup\n\tdocument.body.appendChild( VRButton.createButton( renderer ) );\n\n\tcontroller = renderer.xr.getController( 0 );\n\tcontroller.addEventListener( 'selectstart', () => {\n\n\t\tif ( intersectRing.visible ) {\n\n\t\t\tworkspace.position.copy( intersectRing.position );\n\n\t\t}\n\n\t} );\n\tcontroller.addEventListener( 'connected', function ( event ) {\n\n\t\tthis.controllerActive = true;\n\t\tthis.add( buildController( event.data ) );\n\n\t} );\n\tcontroller.addEventListener( 'disconnected', function () {\n\n\t\tthis.controllerActive = false;\n\t\tthis.remove( this.children[ 0 ] );\n\n\t} );\n\tworkspace.add( controller );\n\n\t// controller models\n\tconst controllerModelFactory = new XRControllerModelFactory();\n\tcontrollerGrip = renderer.xr.getControllerGrip( 0 );\n\tcontrollerGrip.add( controllerModelFactory.createControllerModel( controllerGrip ) );\n\tworkspace.add( controllerGrip );\n\n\tonWindowResize();\n\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t// GUI\n\tconst gui = new GUI();\n\tgui.width = 300;\n\tgui.add( params, 'displayGrid' );\n\tgui.open();\n\n}\n\nfunction buildController( data ) {\n\n\tlet geometry, material;\n\n\tswitch ( data.targetRayMode ) {\n\n\t\tcase 'tracked-pointer':\n\n\t\t\tgeometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, - 1 ], 3 ) );\n\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( [ 0.5, 0.5, 0.5, 0, 0, 0 ], 3 ) );\n\n\t\t\tmaterial = new LineBasicMaterial( {\n\t\t\t\tvertexColors: true,\n\t\t\t\tblending: AdditiveBlending,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttransparent: true,\n\t\t\t} );\n\n\t\t\treturn new Line( geometry, material );\n\n\t\tcase 'gaze':\n\n\t\t\tgeometry = new RingGeometry( 0.02, 0.04, 32 ).translate( 0, 0, - 1 );\n\t\t\tmaterial = new MeshBasicMaterial( { opacity: 0.5, transparent: true } );\n\t\t\treturn new Mesh( geometry, material );\n\n\t}\n\n}\n\nfunction onWindowResize() {\n\n\tcamera.updateProjectionMatrix();\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\tcamera.updateProjectionMatrix();\n\n}\n\nfunction handleCamera() {\n\n\t// get the XR camera with a combined frustum for culling\n\tif ( renderer.xr.isPresenting ) {\n\n\t\tif ( xrSession === null ) { // We setup XR camera once\n\n\t\t\tconst xrCamera = renderer.xr.getCamera( camera );\n\n\t\t\t// remove all cameras so we can use the VR camera instead\n\t\t\ttiles.cameras.forEach( c => tiles.deleteCamera( c ) );\n\t\t\ttiles.setCamera( xrCamera );\n\n\t\t\tconst leftCam = xrCamera.cameras[ 0 ];\n\t\t\tif ( leftCam ) {\n\n\t\t\t\ttiles.setResolution( xrCamera, leftCam.viewport.z, leftCam.viewport.w );\n\n\t\t\t}\n\n\t\t\txrSession = renderer.xr.getSession();\n\n\t\t}\n\n\t} else {\n\n\t\t// Reset default camera (exiting WebXR session)\n\t\tif ( xrSession !== null ) {\n\n\t\t\ttiles.cameras.forEach( c => tiles.deleteCamera( c ) );\n\n\t\t\ttiles.setCamera( camera );\n\t\t\ttiles.setResolutionFromRenderer( camera, renderer );\n\n\t\t\tcamera.position.set( 0, 1, 0 );\n\n\t\t\txrSession = null;\n\n\t\t}\n\n\t}\n\n}\n\nfunction handleTasks() {\n\n\tfor ( let t = 0, l = tasks.length; t < l; t ++ ) {\n\n\t\ttasks[ t ]();\n\n\t}\n\ttasks.length = 0;\n\n}\n\nfunction animate() {\n\n\tgrid.visible = params.displayGrid;\n\n\t// update tiles center\n\tif ( tiles.getBoundingBox( box ) ) {\n\n\t\tbox.getCenter( tiles.group.position );\n\t\ttiles.group.position.multiplyScalar( - 1 );\n\n\t} else if ( tiles.getBoundingSphere( sphere ) ) {\n\n\t\ttiles.group.position.copy( sphere.center );\n\t\ttiles.group.position.multiplyScalar( - 1 );\n\n\t}\n\n\t// We check for tiles camera setup (default and XR sessions)\n\thandleCamera();\n\n\t// We handle pending tasks\n\thandleTasks();\n\n\ttiles.update();\n\n\tif ( controller.controllerActive ) {\n\n\t\tconst { ray } = raycaster;\n\t\traycaster.firstHitOnly = true;\n\n\t\t// get the controller ray\n\t\tray.origin\n\t\t\t.copy( controller.position )\n\t\t\t.applyMatrix4( workspace.matrixWorld );\n\t\tcontroller\n\t\t\t.getWorldDirection( ray.direction )\n\t\t\t.multiplyScalar( - 1 );\n\n\t\tconst results = raycaster.intersectObject( tiles.group, true );\n\t\tif ( results.length ) {\n\n\t\t\tconst hit = results[ 0 ];\n\n\t\t\thit.face.normal.transformDirection( tiles.group.matrixWorld );\n\t\t\tintersectRing.position.copy( hit.point );\n\t\t\tintersectRing.quaternion.setFromUnitVectors(\n\t\t\t\tfwdVector,\n\t\t\t\thit.face.normal,\n\t\t\t);\n\t\t\tintersectRing.visible = true;\n\n\t\t\t// scale ring based on distance\n\t\t\tconst scale = workspace.position.distanceTo( intersectRing.position ) * camera.fov / 4000;\n\t\t\tintersectRing.scale.setScalar( scale );\n\n\t\t\t// only teleport to mostly horizontal surfaces\n\t\t\tif ( hit.face.normal.dot( upVector ) < 0.15 ) {\n\n\t\t\t\tintersectRing.visible = false;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tintersectRing.visible = false;\n\n\t\t}\n\n\t} else {\n\n\t\tintersectRing.visible = false;\n\n\t}\n\n\t// render primary view\n\trenderer.render( scene, camera );\n\n}\n"],"names":["VRButton","renderer","sessionInit","button","showEnterVR","currentSession","onSessionStarted","session","onSessionEnded","sessionOptions","err","disableButton","showWebXRNotFound","showVRNotAllowed","exception","stylizeElement","element","supported","message","Constants","fetchJsonFile","path","response","fetchProfilesList","basePath","fetchProfile","xrInputSource","defaultProfile","getAssetPath","supportedProfilesList","match","profileId","supportedProfile","profile","assetPath","layout","defaultComponentValues","normalizeAxes","x","y","xAxis","yAxis","theta","VisualResponse","visualResponseDescription","state","normalizedXAxis","normalizedYAxis","Component","componentId","componentDescription","responseName","visualResponse","gamepad","gamepadButton","MotionController","assetUrl","data","component","DEFAULT_PROFILES_PATH","DEFAULT_PROFILE","XRControllerModel","Object3D","envMap","child","force","valueNode","minNode","maxNode","value","valueNodeProperty","MotionControllerConstants","findNodes","motionController","scene","type","touchPointNodeName","visualResponses","sphereGeometry","SphereGeometry","material","MeshBasicMaterial","sphere","Mesh","valueNodeName","minNodeName","maxNodeName","addAssetSceneToControllerModel","controllerModel","XRControllerModelFactory","gltfLoader","onLoad","GLTFLoader","controller","event","cachedAsset","asset","camera","tiles","workspace","box","grid","raycaster","fwdVector","intersectRing","offsetParent","controllerGrip","xrSession","tasks","upVector","Vector3","params","init","Scene","WebGLRenderer","animate","Group","GridHelper","PerspectiveCamera","dirLight","DirectionalLight","ambLight","AmbientLight","Box3","Sphere","TilesRenderer","tilesSchedulingCB","func","Raycaster","rayIntersectMat","TorusGeometry","buildController","controllerModelFactory","onWindowResize","gui","GUI","geometry","BufferGeometry","Float32BufferAttribute","LineBasicMaterial","AdditiveBlending","Line","RingGeometry","handleCamera","xrCamera","c","leftCam","handleTasks","t","l","ray","results","hit","scale"],"mappings":"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","x_google_ignoreList":[0,1,2]}