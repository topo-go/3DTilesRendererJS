{"version":3,"file":"landformSiteOverlay-BMH8ha4I.js","sources":["../../src/jpl/JPLLandformSceneLoader.js","../../src/plugins/overlays/TextureOverlayMaterial.js","../../src/plugins/overlays/TextureOverlayPlugin.js","../../landformSiteOverlay.js"],"sourcesContent":["import { Quaternion, Vector3, Matrix4 } from 'three';\n\nconst _position = new Vector3();\nconst _quaternion = new Quaternion();\nconst _scale = new Vector3();\n\nfunction updateFrame( info, frames ) {\n\n\tif ( info.sceneMatrix ) {\n\n\t\treturn;\n\n\t}\n\n\t// get the transformation fields\n\tconst { translation, rotation, scale } = info;\n\t_position.set( translation.x, translation.y, translation.z );\n\t_quaternion.set( rotation.x, rotation.y, rotation.z, rotation.w );\n\t_scale.set( scale.x, scale.y, scale.z );\n\n\t// initialize matrices\n\tinfo.matrix = new Matrix4().compose( _position, _quaternion, _scale );\n\tinfo.sceneMatrix = new Matrix4().copy( info.matrix );\n\n\tif ( info.parent_id !== '' ) {\n\n\t\tconst parent = frames.find( e => e.id === info.parent_id );\n\t\tupdateFrame( parent, frames );\n\t\tinfo.sceneMatrix.premultiply( parent.sceneMatrix );\n\n\t}\n\n}\n\nexport class JPLLandformSiteSceneLoader {\n\n\tconstructor() {\n\n\t\tthis.fetchOptions = {};\n\n\t}\n\n\tloadAsync( url ) {\n\n\t\treturn fetch( url, this.fetchOptions )\n\t\t\t.then( res => res.json() )\n\t\t\t.then( json => this.parse( json ) );\n\n\t}\n\n\tparse( json ) {\n\n\t\tjson\n\t\t\t.frames\n\t\t\t.forEach( info => updateFrame( info, json.frames ) );\n\n\t\treturn json;\n\n\t}\n\n}\n","import { Color } from 'three';\n\nexport const TextureOverlayMaterialMixin = base => class extends base {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\t\tthis.textures = [];\n\t\tthis.overlayColor = new Color( 0x84ffff );\n\t\tthis.displayAsOverlay = false;\n\n\t}\n\n\tonBeforeCompile( shader ) {\n\n\t\tconst textures = this.textures;\n\t\tconst material = this;\n\n\t\tshader.uniforms.textures = {\n\t\t\tget value() {\n\n\t\t\t\treturn material.textures;\n\n\t\t\t},\n\t\t};\n\n\t\tshader.uniforms.overlayColor = {\n\t\t\tget value() {\n\n\t\t\t\treturn material.overlayColor;\n\n\t\t\t},\n\t\t};\n\n\t\tshader.defines = {\n\t\t\tDISPLAY_AS_OVERLAY: Number( this.displayAsOverlay ),\n\t\t};\n\n\t\t// WebGL does not seem to like empty texture arrays\n\t\tif ( textures.length !== 0 ) {\n\n\t\t\tshader.fragmentShader = shader.fragmentShader\n\t\t\t\t.replace( /void main/, m => /* glsl */`\n\t\t\t\t\tuniform sampler2D textures[ ${ textures.length } ];\n\t\t\t\t\tuniform vec3 overlayColor;\n\t\t\t\t\t${ m }\n\n\t\t\t\t` )\n\t\t\t\t.replace( /#include <color_fragment>/, m => /* glsl */`\n\n\t\t\t\t\t${ m }\n\n\t\t\t\t\tvec4 col;\n\t\t\t\t\t#pragma unroll_loop_start\n\t\t\t\t\tfor ( int i = 0; i < ${ textures.length }; i ++ ) {\n\n\t\t\t\t\t\tcol = texture( textures[ i ], vMapUv );\n\n\t\t\t\t\t\t#if DISPLAY_AS_OVERLAY\n\n\t\t\t\t\t\tdiffuseColor = mix( diffuseColor, vec4( overlayColor, 1.0 ), col.r * 0.5 );\n\n\t\t\t\t\t\t#else\n\n\t\t\t\t\t\tdiffuseColor = mix( diffuseColor, col, col.a );\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t}\n\t\t\t\t\t#pragma unroll_loop_end\n\n\t\t\t\t` );\n\n\t\t}\n\n\t}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn String( this.displayAsOverlay ) + String( this.textures.length ) + this.onBeforeCompile.toString();\n\n\t}\n\n};\n","import { TextureLoader, ImageBitmapLoader } from 'three';\nimport { PriorityQueue } from '../../../..';\n\nfunction canUseImageBitmap() {\n\n\tlet isSafari = false;\n\tlet isFirefox = false;\n\tlet firefoxVersion = - 1;\n\n\tif ( typeof navigator !== 'undefined' ) {\n\n\t\tisSafari = /^((?!chrome|android).)*safari/i.test( navigator.userAgent ) === true;\n\t\tisFirefox = navigator.userAgent.indexOf( 'Firefox' ) > - 1;\n\t\tfirefoxVersion = isFirefox ? navigator.userAgent.match( /Firefox\\/([0-9]+)\\./ )[ 1 ] : - 1;\n\n\t}\n\n\treturn ! ( typeof createImageBitmap === 'undefined' || isSafari || ( isFirefox && firefoxVersion < 98 ) );\n\n}\n\nclass TextureCache {\n\n\tconstructor( loadTextureCallback, queue ) {\n\n\t\tthis.cache = {};\n\t\tthis.fetchOptions = {};\n\t\tthis.loadTextureCallback = loadTextureCallback;\n\t\tthis.queue = queue;\n\n\t}\n\n\tgetTextureLoader() {\n\n\t\tconst fetchOptions = this.fetchOptions;\n\n\t\tlet loader;\n\t\tif ( canUseImageBitmap() ) {\n\n\t\t\tloader = new ImageBitmapLoader();\n\n\t\t} else {\n\n\t\t\tloader = new TextureLoader();\n\n\t\t}\n\n\t\tif ( fetchOptions.credentials === 'include' && fetchOptions.mode === 'cors' ) {\n\n\t\t\tloader.setCrossOrigin( 'use-credentials' );\n\n\t\t}\n\n\t\tif ( 'credentials' in fetchOptions ) {\n\n\t\t\tloader.setWithCredentials( fetchOptions.credentials === 'include' );\n\n\t\t}\n\n\t\tif ( fetchOptions.headers ) {\n\n\t\t\tloader.setRequestHeader( fetchOptions.headers );\n\n\t\t}\n\n\t\treturn loader;\n\n\t}\n\n\tloadTexture( key ) {\n\n\t\tconst cache = this.cache;\n\t\tif ( key in cache ) {\n\n\t\t\treturn cache[ key ].promise;\n\n\t\t}\n\n\t\tconst abortController = new AbortController();\n\t\tconst promise = this.queue\n\t\t\t.add( key, () => {\n\n\t\t\t\treturn this.loadTextureCallback( key );\n\n\t\t\t} )\n\t\t\t.then( tex => {\n\n\t\t\t\tif ( ! abortController.signal.aborted ) {\n\n\t\t\t\t\tcache[ key ].texture = tex;\n\t\t\t\t\treturn tex;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'TextureCache: Texture load aborted.' );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\tthis.cache[ key ] = {\n\t\t\ttexture: null,\n\t\t\tabortController,\n\t\t\tpromise,\n\t\t};\n\n\t\treturn promise;\n\n\t}\n\n\tgetTexture( key ) {\n\n\t\tconst cache = this.cache;\n\t\tif ( key in cache ) {\n\n\t\t\treturn cache[ key ].texture;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t}\n\n\tdeleteTexture( key ) {\n\n\t\tconst cache = this.cache;\n\t\tif ( key in cache ) {\n\n\t\t\tconst info = cache[ key ];\n\t\t\tinfo.refs --;\n\n\t\t\tif ( info.refs === 0 ) {\n\n\t\t\t\tif ( info.texture ) {\n\n\t\t\t\t\tinfo.texture.dispose();\n\n\t\t\t\t} else if ( info.abortController ) {\n\n\t\t\t\t\tinfo.abortController.abort();\n\t\t\t\t\tthis.queue.remove( key );\n\n\t\t\t\t}\n\n\t\t\t\tdelete this.cache[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tconst cache = this.cache;\n\t\tfor ( const key in cache ) {\n\n\t\t\tconst info = cache[ key ];\n\t\t\tif ( info.texture ) {\n\n\t\t\t\tinfo.texture.dispose();\n\t\t\t\tif ( info.texture.image instanceof ImageBitmap ) {\n\n\t\t\t\t\tinfo.texture.image.close();\n\n\t\t\t\t}\n\n\t\t\t} else if ( info.abortController ) {\n\n\t\t\t\tinfo.abortController.abort();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport class TextureOverlayPlugin {\n\n\tconstructor( options = {} ) {\n\n\t\toptions = {\n\n\t\t\t// callback fired when textures have loaded\n\t\t\ttextureUpdateCallback: () => {\n\n\t\t\t\tthrow new Error( 'TextureOverlayPlugin: \"textureUpdateCallback\" required.' );\n\n\t\t\t},\n\n\t\t\t// if true then the plugin will wait until all tile textures have loaded before firing\n\t\t\t// the update callback to avoid textures trickling in\n\t\t\twaitForLoadCompletion: true,\n\t\t\t...options,\n\t\t},\n\n\t\tthis.name = 'TEXTURE_OVERLAY_PLUGIN';\n\t\tthis.caches = null;\n\t\tthis.queue = null;\n\t\tthis.tiles = null;\n\n\t\t// options\n\t\tthis.textureUpdateCallback = options.textureUpdateCallback;\n\t\tthis.waitForLoadCompletion = options.waitForLoadCompletion;\n\n\t}\n\n\t// plugin functions\n\tinit( tiles ) {\n\n\t\tthis.tiles = tiles;\n\t\tthis.caches = {};\n\t\tthis.queue = new PriorityQueue();\n\t\tthis.queue.priorityCallback = ( a, b ) => {\n\n\t\t\treturn tiles.downloadQueue.priorityCallback( a, b );\n\n\t\t};\n\n\t\tthis._disposeModelCallback = ( { tile } ) => {\n\n\t\t\tconst caches = this.caches;\n\t\t\tfor ( const key in caches ) {\n\n\t\t\t\tconst cache = caches[ key ];\n\t\t\t\tcache.deleteTexture( this.getTileKey( tile ) );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis._assignTexturesCallback = ( { tile, scene } ) => {\n\n\t\t\t// queue a microtask here so we can make sure this fires after all the other load events\n\t\t\tqueueMicrotask( () => this.textureUpdateCallback( scene, tile, this ) );\n\n\t\t};\n\n\t\ttiles.addEventListener( 'dispose-model', this._disposeModelCallback );\n\t\ttiles.addEventListener( 'load-model', this._assignTexturesCallback );\n\t\ttiles.addEventListener( 'layer-textures-change', this._assignTexturesCallback );\n\n\t}\n\n\tprocessTileModel( scene, tile ) {\n\n\t\tconst caches = this.caches;\n\t\tconst promises = [];\n\t\tfor ( const key in caches ) {\n\n\t\t\tconst cache = caches[ key ];\n\t\t\tconst pr = cache\n\t\t\t\t.loadTexture( this.getTileKey( tile ) )\n\t\t\t\t.catch( () => {} );\n\n\t\t\tpromises.push( pr );\n\n\t\t}\n\n\t\treturn Promise.all( promises );\n\n\t}\n\n\tdispose() {\n\n\t\tconst { caches, tiles } = this;\n\t\tObject.keys( caches ).forEach( key => {\n\n\t\t\tthis.unregisterLayer( key );\n\n\t\t} );\n\n\t\ttiles.removeEventListener( 'dispose-model', this._disposeModelCallback );\n\t\ttiles.removeEventListener( 'load-model', this._assignTexturesCallback );\n\t\ttiles.removeEventListener( 'layer-textures-change', this._assignTexturesCallback );\n\n\t}\n\n\t// public functions\n\tgetTileKey( tile ) {\n\n\t\treturn new URL( tile.content.uri, tile.__basePath + '/' ).toString();\n\n\t}\n\n\tgetTexturesForTile( tile, target = {} ) {\n\n\t\tconst tileKey = this.getTileKey( tile );\n\t\tconst caches = this.caches;\n\t\tfor ( const key in target ) {\n\n\t\t\tif ( ! ( key in caches ) ) delete target[ key ];\n\n\t\t}\n\n\t\tfor ( const key in caches ) {\n\n\t\t\ttarget[ key ] = caches[ key ].getTexture( tileKey );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\thasLayer( name ) {\n\n\t\treturn name in this.caches;\n\n\t}\n\n\tregisterLayer( name, customTextureCallback ) {\n\n\t\tif ( name in this.caches ) {\n\n\t\t\tthrow new Error( `TextureOverlayPlugin: Texture overlay named ${ name } already exists.` );\n\n\t\t}\n\n\t\tconst tiles = this.tiles;\n\t\tconst cache = new TextureCache( customTextureCallback, this.queue );\n\t\tcache.fetchOptions = tiles.fetchOptions;\n\t\tthis.caches[ name ] = cache;\n\n\t\tif ( this.waitForLoadCompletion ) {\n\n\t\t\t// trigger all tile loads\n\t\t\tconst promises = [];\n\t\t\ttiles.forEachLoadedModel( ( scene, tile ) => {\n\n\t\t\t\tconst pr = cache\n\t\t\t\t\t.loadTexture( this.getTileKey( tile ) )\n\t\t\t\t\t.then( () => {\n\n\t\t\t\t\t\treturn { scene, tile };\n\n\t\t\t\t\t} );\n\n\t\t\t\tpromises.push( pr );\n\n\t\t\t} );\n\n\t\t\t// await all of them to finish before assigning them\n\t\t\tPromise.allSettled( promises )\n\t\t\t\t.then( results => {\n\n\t\t\t\t\t// if the layer has already been unregistered then skip\n\t\t\t\t\tif ( ! ( name in this.caches ) ) {\n\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// trigger the texture updates\n\t\t\t\t\tresults.forEach( info => {\n\n\t\t\t\t\t\tif ( info.status === 'fulfilled' ) {\n\n\t\t\t\t\t\t\tthis.textureUpdateCallback( info.value.scene, info.value.tile, this );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t} else {\n\n\t\t\ttiles.forEachLoadedModel( ( scene, tile ) => {\n\n\t\t\t\tcache\n\t\t\t\t\t.loadTexture( this.getTileKey( tile ) )\n\t\t\t\t\t.then( () => this.textureUpdateCallback( scene, tile, this ) )\n\t\t\t\t\t.catch( () => {} );\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tunregisterLayer( name ) {\n\n\t\tconst tiles = this.tiles;\n\t\tconst caches = this.caches;\n\t\tif ( name in caches ) {\n\n\t\t\tconst cache = caches[ name ];\n\t\t\tdelete caches[ name ];\n\n\t\t\ttiles.forEachLoadedModel( ( scene, tile ) => {\n\n\t\t\t\tconst texture = cache.getTexture( this.getTileKey( tile ) );\n\t\t\t\tif ( texture ) {\n\n\t\t\t\t\tthis.textureUpdateCallback( scene, tile, this );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcache.dispose();\n\n\t\t}\n\n\t}\n\n}\n","import {\n\tTilesRenderer,\n\tEnvironmentControls,\n} from '3d-tiles-renderer';\nimport {\n\tScene,\n\tWebGLRenderer,\n\tPerspectiveCamera,\n\tGroup,\n\tTextureLoader,\n\tMeshBasicMaterial,\n\tSRGBColorSpace,\n} from 'three';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { JPLLandformSiteSceneLoader } from './src/jpl/JPLLandformSceneLoader.js';\nimport { TextureOverlayMaterialMixin } from './src/plugins/overlays/TextureOverlayMaterial.js';\nimport { TextureOverlayPlugin } from './src/plugins/overlays/TextureOverlayPlugin.js';\n\nconst URLS = [\n\n\t'NLF_0477_0709296508M723RAS_N0261004NCAM00701_0A0085J02/NLF_0477_0709296508M723RAS_N0261004NCAM00701_0A0085J02_scene.json',\n\t'NLF_0477_0709296508M723RAS_N0261004NCAM00708_0A00LLJ02/NLF_0477_0709296508M723RAS_N0261004NCAM00708_0A00LLJ02_scene.json',\n\t'NLF_0477_0709297328M366RAS_N0261004NCAM03477_0A0195J02/NLF_0477_0709297328M366RAS_N0261004NCAM03477_0A0195J02_scene.json',\n\t'NLF_0477_0709297503M102RAS_N0261004NCAM03477_0A0195J02/NLF_0477_0709297503M102RAS_N0261004NCAM03477_0A0195J02_scene.json',\n\t'NLF_0477_0709297668M065RAS_N0261004NCAM03477_0A0195J02/NLF_0477_0709297668M065RAS_N0261004NCAM03477_0A0195J02_scene.json',\n\t'NLF_0477_0709297838M897RAS_N0261004NCAM02477_0A0195J02/NLF_0477_0709297838M897RAS_N0261004NCAM02477_0A0195J02_scene.json',\n\t'NLF_0477_0709298005M099RAS_N0261004NCAM02477_0A0195J02/NLF_0477_0709298005M099RAS_N0261004NCAM02477_0A0195J02_scene.json',\n\t'NLF_0477_0709298187M680RAS_N0261004NCAM13477_0A0195J02/NLF_0477_0709298187M680RAS_N0261004NCAM13477_0A0195J02_scene.json',\n\t'NLF_0477_0709298299M678RAS_N0261004NCAM13477_0A0195J02/NLF_0477_0709298299M678RAS_N0261004NCAM13477_0A0195J02_scene.json',\n\t'NLF_0477_0709298393M010RAS_N0261004NCAM13477_0A0195J02/NLF_0477_0709298393M010RAS_N0261004NCAM13477_0A0195J02_scene.json',\n\n\t// 'NLFS0498_0711156087M000RAS_N0261004NCAM00607_0A0095J01/NLFS0498_0711156087M000RAS_N0261004NCAM00607_0A0095J01_scene.json',\n\t// 'NLF_0482_0709734873M194RAS_N0261004NCAM00347_0A0195J02/NLF_0482_0709734873M194RAS_N0261004NCAM00347_0A0195J02_scene.json',\n\t// 'NLF_0482_0709735996M816RAS_N0261004NCAM00709_0A0095J02/NLF_0482_0709735996M816RAS_N0261004NCAM00709_0A0095J02_scene.json',\n\t// 'NLF_0490_0710456117M926RAS_N0261004NCAM00709_0A0095J03/NLF_0490_0710456117M926RAS_N0261004NCAM00709_0A0095J03_scene.json',\n\t// 'NLF_0491_0710536867M784RAS_N0261004NCAM00709_0A0095J02/NLF_0491_0710536867M784RAS_N0261004NCAM00709_0A0095J02_scene.json',\n\t// 'NLF_0495_0710900102M755RAS_N0261004NCAM00709_0A0095J02/NLF_0495_0710900102M755RAS_N0261004NCAM00709_0A0095J02_scene.json',\n\t// 'NLF_0499_0711256332M612RAS_N0261004NCAM00347_0A1195J03/NLF_0499_0711256332M612RAS_N0261004NCAM00347_0A1195J03_scene.json',\n\n].map( n => {\n\n\treturn 'https://raw.githubusercontent.com/NASA-AMMOS/3DTilesSampleData/master/m20-drive-1004/tilesets/' + n;\n\n} );\n\nconst tileSets = [];\nlet camera, controls, scene, renderer;\n\nconst params = {\n\n\terrorTarget: 12,\n\tslopeDisplay: 'NONE',\n\n};\n\ninit();\nrender();\n\nfunction init() {\n\n\tscene = new Scene();\n\n\t// primary camera view\n\trenderer = new WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( 0xd8cec0 );\n\n\tdocument.body.appendChild( renderer.domElement );\n\trenderer.domElement.tabIndex = 1;\n\n\tcamera = new PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 0.025, 4000 );\n\tcamera.position.set( - 20, 10, 20 );\n\tcamera.lookAt( 0, 0, 0 );\n\n\t// controls\n\tcontrols = new EnvironmentControls( scene, camera, renderer.domElement );\n\tcontrols.adjustHeight = false;\n\tcontrols.minDistance = 1;\n\tcontrols.maxAltitude = Math.PI;\n\n\t// tile group\n\tconst tilesParent = new Group();\n\ttilesParent.rotation.set( Math.PI / 2, 0, 0 );\n\tscene.add( tilesParent );\n\n\t// load all tile sets\n\tlet downloadQueue = null;\n\tlet parseQueue = null;\n\tlet lruCache = null;\n\tlet processNodeQueue = null;\n\tconst layerFunction = async tileUrl => {\n\n\t\tconst url = tileUrl.replace( '/tilesets/', '/textures/SMG/' ).replace( /\\.[0-9a-z]+$/i, '.png' );\n\n\t\treturn new TextureLoader()\n\t\t\t.loadAsync( url )\n\t\t\t.then( tex => {\n\n\t\t\t\ttex.colorSpace = SRGBColorSpace;\n\t\t\t\ttex.flipY = false;\n\t\t\t\treturn tex;\n\n\t\t\t} );\n\n\t};\n\n\tURLS.forEach( async url => {\n\n\t\tconst scene = await new JPLLandformSiteSceneLoader().loadAsync( url );\n\t\tconst tokens = url.split( /[\\\\/]/g );\n\t\ttokens.pop();\n\n\t\tconst TextureOverlayMaterial = TextureOverlayMaterialMixin( MeshBasicMaterial );\n\t\tscene.tilesets.forEach( info => {\n\n\t\t\tconst url = [ ...tokens, `${ info.id }_tileset.json` ].join( '/' );\n\t\t\tconst tiles = new TilesRenderer( url );\n\t\t\tconst textureUpdateCallback = ( scene, tile, plugin ) => {\n\n\t\t\t\tscene.traverse( c => {\n\n\t\t\t\t\tif ( c.material ) {\n\n\t\t\t\t\t\tc.material.textures = Object.values( plugin.getTexturesForTile( tile ) );\n\t\t\t\t\t\tc.material.displayAsOverlay = params.slopeDisplay === 'OVERLAY';\n\t\t\t\t\t\tc.material.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t};\n\t\t\tconst plugin = new TextureOverlayPlugin( { textureUpdateCallback } );\n\t\t\ttiles.registerPlugin( plugin );\n\n\t\t\t// ensure all materials support overlay textures\n\t\t\ttiles.addEventListener( 'load-model', ( { tile, scene } )=> {\n\n\t\t\t\tscene.traverse( c => {\n\n\t\t\t\t\tif ( c.material ) {\n\n\t\t\t\t\t\tconst newMaterial = new TextureOverlayMaterial();\n\t\t\t\t\t\tnewMaterial.copy( c.material );\n\t\t\t\t\t\tc.material = newMaterial;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t\t// assign a common cache and data\n\t\t\tlruCache = lruCache || tiles.lruCache;\n\t\t\tparseQueue = parseQueue || tiles.parseQueue;\n\t\t\tdownloadQueue = downloadQueue || tiles.downloadQueue;\n\t\t\tprocessNodeQueue = processNodeQueue || tiles.processNodeQueue;\n\n\t\t\ttiles.lruCache = lruCache;\n\t\t\ttiles.downloadQueue = downloadQueue;\n\t\t\ttiles.parseQueue = parseQueue;\n\t\t\ttiles.processNodeQueue = processNodeQueue;\n\t\t\ttiles.setCamera( camera );\n\n\t\t\t// update the scene\n\t\t\tconst frame = scene.frames.find( f => f.id === info.frame_id );\n\t\t\tframe.sceneMatrix.decompose( tiles.group.position, tiles.group.quaternion, tiles.group.scale );\n\t\t\ttilesParent.add( tiles.group );\n\t\t\ttileSets.push( tiles );\n\n\t\t} );\n\n\t} );\n\n\tonWindowResize();\n\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\tconst gui = new GUI();\n\tgui.add( params, 'errorTarget', 0, 100 );\n\tgui.add( params, 'slopeDisplay', [ 'NONE', 'OVERLAY', 'SOLID' ] ).onChange( v => {\n\n\t\tif ( v !== 'NONE' ) {\n\n\t\t\ttileSets.forEach( t => {\n\n\t\t\t\tconst plugin = t.getPluginByName( 'TEXTURE_OVERLAY_PLUGIN' );\n\t\t\t\tif ( ! plugin.hasLayer( 'slopeLayer' ) ) {\n\n\t\t\t\t\tplugin.registerLayer( 'slopeLayer', layerFunction );\n\n\t\t\t\t}\n\n\t\t\t\tt.forEachLoadedModel( scene => {\n\n\t\t\t\t\tscene.traverse( c => {\n\n\t\t\t\t\t\tif ( c.material ) {\n\n\t\t\t\t\t\t\tc.material.displayAsOverlay = v === 'OVERLAY';\n\t\t\t\t\t\t\tc.material.needsUpdate = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\ttileSets.forEach( t => {\n\n\t\t\t\tconst plugin = t.getPluginByName( 'TEXTURE_OVERLAY_PLUGIN' );\n\t\t\t\tplugin.unregisterLayer( 'slopeLayer' );\n\n\t\t\t} );\n\n\t\t}\n\n\t} );\n\tgui.open();\n\n}\n\nfunction onWindowResize() {\n\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\tcamera.updateProjectionMatrix();\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\n}\n\nfunction render() {\n\n\trequestAnimationFrame( render );\n\n\tcontrols.update();\n\tcamera.updateMatrixWorld();\n\n\ttileSets.forEach( tiles => {\n\n\t\ttiles.errorTarget = params.errorTarget;\n\n\t\ttiles.setResolutionFromRenderer( camera, renderer );\n\t\ttiles.update();\n\n\t} );\n\n\trenderer.render( scene, camera );\n\n}\n"],"names":["_position","Vector3","_quaternion","Quaternion","_scale","updateFrame","info","frames","translation","rotation","scale","Matrix4","parent","e","JPLLandformSiteSceneLoader","url","res","json","TextureOverlayMaterialMixin","base","args","Color","shader","textures","material","m","canUseImageBitmap","isSafari","isFirefox","firefoxVersion","TextureCache","loadTextureCallback","queue","fetchOptions","loader","ImageBitmapLoader","TextureLoader","key","cache","abortController","promise","tex","TextureOverlayPlugin","options","tiles","PriorityQueue","a","b","tile","caches","scene","promises","pr","target","tileKey","name","customTextureCallback","results","URLS","n","tileSets","camera","controls","renderer","params","init","render","Scene","WebGLRenderer","PerspectiveCamera","EnvironmentControls","tilesParent","Group","downloadQueue","parseQueue","lruCache","processNodeQueue","layerFunction","tileUrl","SRGBColorSpace","tokens","TextureOverlayMaterial","MeshBasicMaterial","TilesRenderer","textureUpdateCallback","plugin","c","newMaterial","f","onWindowResize","gui","GUI","v","t"],"mappings":"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"}