{"version":3,"file":"UnloadTilesPlugin-C6lJ6nje.js","sources":["../../../src/three/plugins/UnloadTilesPlugin.js"],"sourcesContent":["import { LRUCache } from '../../core/renderer/utilities/LRUCache.js';\n\n// Plugin that disposes tiles on unload to remove them from the GPU, saving memory\n\n// TODO:\n// - abstract the \"tile visible\" callback so fade tiles can call it when tiles are _actually_ marked as non-visible\nexport class UnloadTilesPlugin {\n\n\tset delay( v ) {\n\n\t\tthis.deferCallbacks.delay = v;\n\n\t}\n\n\tget delay() {\n\n\t\treturn this.deferCallbacks.delay;\n\n\t}\n\n\tset bytesTarget( v ) {\n\n\t\tthis.lruCache.minBytesSize = v;\n\n\t}\n\n\tget bytesTarget() {\n\n\t\treturn this.lruCache.minBytesSize;\n\n\t}\n\n\tget estimatedGpuBytes() {\n\n\t\treturn this.lruCache.cachedBytes;\n\n\t}\n\n\tconstructor( options = {} ) {\n\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tbytesTarget = 0,\n\t\t} = options;\n\n\t\tthis.name = 'UNLOAD_TILES_PLUGIN';\n\n\t\tthis.tiles = null;\n\t\tthis.lruCache = new LRUCache();\n\t\tthis.deferCallbacks = new DeferCallbackManager();\n\n\t\tthis.delay = delay;\n\t\tthis.bytesTarget = bytesTarget;\n\n\t}\n\n\tinit( tiles ) {\n\n\t\tthis.tiles = tiles;\n\n\t\tconst { lruCache, deferCallbacks } = this;\n\t\tdeferCallbacks.callback = tile => {\n\n\t\t\tlruCache.markUnused( tile );\n\t\t\tlruCache.scheduleUnload( false );\n\n\t\t};\n\n\t\tconst unloadCallback = tile => {\n\n\t\t\tconst scene = tile.cached.scene;\n\t\t\tconst visible = tiles.visibleTiles.has( tile );\n\n\t\t\tif ( ! visible ) {\n\n\t\t\t\ttiles.invokeOnePlugin( plugin => plugin.unloadTileFromGPU && plugin.unloadTileFromGPU( scene, tile ) );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis._onUpdateBefore = () => {\n\n\t\t\t// update lruCache in \"update\" in case the callback values change\n\t\t\tlruCache.unloadPriorityCallback = tiles.lruCache.unloadPriorityCallback;\n\t\t\tlruCache.computeMemoryUsageCallback = tiles.lruCache.computeMemoryUsageCallback;\n\t\t\tlruCache.minSize = Infinity;\n\t\t\tlruCache.maxSize = Infinity;\n\t\t\tlruCache.maxBytesSize = Infinity;\n\t\t\tlruCache.unloadPercent = 1;\n\t\t\tlruCache.autoMarkUnused = false;\n\n\t\t};\n\n\t\tthis._onVisibilityChangeCallback = ( { tile, visible } ) => {\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tlruCache.add( tile, unloadCallback );\n\t\t\t\ttiles.markTileUsed( tile );\n\t\t\t\tdeferCallbacks.cancel( tile );\n\n\t\t\t} else {\n\n\t\t\t\tdeferCallbacks.run( tile );\n\n\t\t\t}\n\n\t\t};\n\n\t\ttiles.forEachLoadedModel( ( scene, tile ) => {\n\n\t\t\tconst visible = tiles.visibleTiles.has( tile );\n\t\t\tthis._onVisibilityChangeCallback( { scene, visible } );\n\n\t\t} );\n\n\t\ttiles.addEventListener( 'tile-visibility-change', this._onVisibilityChangeCallback );\n\t\ttiles.addEventListener( 'update-before', this._onUpdateBefore );\n\n\t}\n\n\tunloadTileFromGPU( scene, tile ) {\n\n\t\tif ( scene ) {\n\n\t\t\tscene.traverse( c => {\n\n\t\t\t\tif ( c.material ) {\n\n\t\t\t\t\tconst material = c.material;\n\t\t\t\t\tmaterial.dispose();\n\n\t\t\t\t\tfor ( const key in material ) {\n\n\t\t\t\t\t\tconst value = material[ key ];\n\t\t\t\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\t\t\t\tvalue.dispose();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.geometry ) {\n\n\t\t\t\t\tc.geometry.dispose();\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tthis.tiles.removeEventListener( 'tile-visibility-change', this._onVisibilityChangeCallback );\n\t\tthis.tiles.removeEventListener( 'update-before', this._onUpdateBefore );\n\t\tthis.deferCallbacks.cancelAll();\n\n\t}\n\n}\n\n// Manager for running callbacks after a certain amount of time\nclass DeferCallbackManager {\n\n\tconstructor( callback = () => {} ) {\n\n\t\tthis.map = new Map();\n\t\tthis.callback = callback;\n\t\tthis.delay = 0;\n\n\t}\n\n\trun( tile ) {\n\n\t\tconst { map, delay } = this;\n\t\tif ( map.has( tile ) ) {\n\n\t\t\tthrow new Error( 'DeferCallbackManager: Callback already initialized.' );\n\n\t\t}\n\n\t\tif ( delay === 0 ) {\n\n\t\t\tthis.callback( tile );\n\n\t\t} else {\n\n\t\t\tmap.set( tile, setTimeout( () => this.callback( tile ), delay ) );\n\n\t\t}\n\n\t}\n\n\tcancel( tile ) {\n\n\t\tconst { map } = this;\n\t\tif ( map.has( tile ) ) {\n\n\t\t\tclearTimeout( map.get( tile ) );\n\t\t\tmap.delete( tile );\n\n\t\t}\n\n\t}\n\n\tcancelAll() {\n\n\t\tthis.map.forEach( ( value, tile ) => {\n\n\t\t\tthis.cancel( tile );\n\n\t\t} );\n\n\t}\n\n}\n"],"names":["UnloadTilesPlugin","v","options","delay","bytesTarget","LRUCache","DeferCallbackManager","tiles","lruCache","deferCallbacks","tile","unloadCallback","scene","plugin","visible","c","material","key","value","callback","map"],"mappings":"gDAMO,MAAMA,CAAkB,CAE9B,IAAI,MAAOC,EAAI,CAEd,KAAK,eAAe,MAAQA,CAE9B,CAEC,IAAI,OAAQ,CAEX,OAAO,KAAK,eAAe,KAE7B,CAEC,IAAI,YAAaA,EAAI,CAEpB,KAAK,SAAS,aAAeA,CAE/B,CAEC,IAAI,aAAc,CAEjB,OAAO,KAAK,SAAS,YAEvB,CAEC,IAAI,mBAAoB,CAEvB,OAAO,KAAK,SAAS,WAEvB,CAEC,YAAaC,EAAU,GAAK,CAE3B,KAAM,CACL,MAAAC,EAAQ,EACR,YAAAC,EAAc,CACjB,EAAMF,EAEJ,KAAK,KAAO,sBAEZ,KAAK,MAAQ,KACb,KAAK,SAAW,IAAIG,EACpB,KAAK,eAAiB,IAAIC,EAE1B,KAAK,MAAQH,EACb,KAAK,YAAcC,CAErB,CAEC,KAAMG,EAAQ,CAEb,KAAK,MAAQA,EAEb,KAAM,CAAE,SAAAC,EAAU,eAAAC,CAAc,EAAK,KACrCA,EAAe,SAAWC,GAAQ,CAEjCF,EAAS,WAAYE,CAAM,EAC3BF,EAAS,eAAgB,EAAO,CAEhC,EAED,MAAMG,EAAiBD,GAAQ,CAE9B,MAAME,EAAQF,EAAK,OAAO,MACVH,EAAM,aAAa,IAAKG,CAAM,GAI7CH,EAAM,gBAAiBM,GAAUA,EAAO,mBAAqBA,EAAO,kBAAmBD,EAAOF,EAAQ,CAIvG,EAED,KAAK,gBAAkB,IAAM,CAG5BF,EAAS,uBAAyBD,EAAM,SAAS,uBACjDC,EAAS,2BAA6BD,EAAM,SAAS,2BACrDC,EAAS,QAAU,IACnBA,EAAS,QAAU,IACnBA,EAAS,aAAe,IACxBA,EAAS,cAAgB,EACzBA,EAAS,eAAiB,EAE1B,EAED,KAAK,4BAA8B,CAAE,CAAE,KAAAE,EAAM,QAAAI,CAAO,IAAQ,CAEtDA,GAEJN,EAAS,IAAKE,EAAMC,CAAgB,EACpCJ,EAAM,aAAcG,CAAM,EAC1BD,EAAe,OAAQC,CAAM,GAI7BD,EAAe,IAAKC,CAAM,CAI3B,EAEDH,EAAM,mBAAoB,CAAEK,EAAOF,IAAU,CAE5C,MAAMI,EAAUP,EAAM,aAAa,IAAKG,CAAM,EAC9C,KAAK,4BAA6B,CAAE,MAAAE,EAAO,QAAAE,CAAO,CAAI,CAEzD,CAAK,EAEHP,EAAM,iBAAkB,yBAA0B,KAAK,2BAA6B,EACpFA,EAAM,iBAAkB,gBAAiB,KAAK,eAAiB,CAEjE,CAEC,kBAAmBK,EAAOF,EAAO,CAE3BE,GAEJA,EAAM,SAAUG,GAAK,CAEpB,GAAKA,EAAE,SAAW,CAEjB,MAAMC,EAAWD,EAAE,SACnBC,EAAS,QAAS,EAElB,UAAYC,KAAOD,EAAW,CAE7B,MAAME,EAAQF,EAAUC,CAAK,EACxBC,GAASA,EAAM,WAEnBA,EAAM,QAAS,CAItB,CAEA,CAESH,EAAE,UAENA,EAAE,SAAS,QAAS,CAIzB,CAAM,CAIN,CAEC,SAAU,CAET,KAAK,MAAM,oBAAqB,yBAA0B,KAAK,2BAA6B,EAC5F,KAAK,MAAM,oBAAqB,gBAAiB,KAAK,eAAiB,EACvE,KAAK,eAAe,UAAW,CAEjC,CAEA,CAGA,MAAMT,CAAqB,CAE1B,YAAaa,EAAW,IAAM,GAAK,CAElC,KAAK,IAAM,IAAI,IACf,KAAK,SAAWA,EAChB,KAAK,MAAQ,CAEf,CAEC,IAAKT,EAAO,CAEX,KAAM,CAAE,IAAAU,EAAK,MAAAjB,CAAK,EAAK,KACvB,GAAKiB,EAAI,IAAKV,GAEb,MAAM,IAAI,MAAO,qDAAuD,EAIpEP,IAAU,EAEd,KAAK,SAAUO,CAAM,EAIrBU,EAAI,IAAKV,EAAM,WAAY,IAAM,KAAK,SAAUA,GAAQP,EAAS,CAIpE,CAEC,OAAQO,EAAO,CAEd,KAAM,CAAE,IAAAU,CAAG,EAAK,KACXA,EAAI,IAAKV,KAEb,aAAcU,EAAI,IAAKV,EAAQ,EAC/BU,EAAI,OAAQV,CAAM,EAIrB,CAEC,WAAY,CAEX,KAAK,IAAI,QAAS,CAAEQ,EAAOR,IAAU,CAEpC,KAAK,OAAQA,CAAM,CAEtB,CAAK,CAEL,CAEA"}